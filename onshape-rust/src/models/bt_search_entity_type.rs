/*
 * Onshape REST API
 *
 * ## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn't used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.
 *
 * The version of the OpenAPI document: 1.198.56658-8969b956ea73
 * Contact: api-support@onshape.zendesk.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum BtSearchEntityType {
    #[serde(rename = "unknown")]
    Unknown,
    #[serde(rename = "capability")]
    Capability,
    #[serde(rename = "company")]
    Company,
    #[serde(rename = "document")]
    Document,
    #[serde(rename = "element")]
    Element,
    #[serde(rename = "friend")]
    Friend,
    #[serde(rename = "item")]
    Item,
    #[serde(rename = "part")]
    Part,
    #[serde(rename = "team")]
    Team,
    #[serde(rename = "user")]
    User,
    #[serde(rename = "version")]
    Version,
    #[serde(rename = "workspace")]
    Workspace,
    #[serde(rename = "project")]
    Project,
    #[serde(rename = "publication")]
    Publication,
    #[serde(rename = "comment_task")]
    CommentTask,
    #[serde(rename = "generic_task")]
    GenericTask,
    #[serde(rename = "release_task")]
    ReleaseTask,
    #[serde(rename = "app_store_entry")]
    AppStoreEntry,
    #[serde(rename = "folder")]
    Folder,

}

impl std::fmt::Display for BtSearchEntityType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Unknown => write!(f, "unknown"),
            Self::Capability => write!(f, "capability"),
            Self::Company => write!(f, "company"),
            Self::Document => write!(f, "document"),
            Self::Element => write!(f, "element"),
            Self::Friend => write!(f, "friend"),
            Self::Item => write!(f, "item"),
            Self::Part => write!(f, "part"),
            Self::Team => write!(f, "team"),
            Self::User => write!(f, "user"),
            Self::Version => write!(f, "version"),
            Self::Workspace => write!(f, "workspace"),
            Self::Project => write!(f, "project"),
            Self::Publication => write!(f, "publication"),
            Self::CommentTask => write!(f, "comment_task"),
            Self::GenericTask => write!(f, "generic_task"),
            Self::ReleaseTask => write!(f, "release_task"),
            Self::AppStoreEntry => write!(f, "app_store_entry"),
            Self::Folder => write!(f, "folder"),
        }
    }
}

impl Default for BtSearchEntityType {
    fn default() -> BtSearchEntityType {
        Self::Unknown
    }
}

