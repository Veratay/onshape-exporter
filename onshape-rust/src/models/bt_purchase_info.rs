/*
 * Onshape REST API
 *
 * ## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn't used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.
 *
 * The version of the OpenAPI document: 1.198.56658-8969b956ea73
 * Contact: api-support@onshape.zendesk.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct BtPurchaseInfo {
    #[serde(rename = "accountId", skip_serializing_if = "Option::is_none")]
    pub account_id: Option<String>,
    #[serde(rename = "actualAmountPaidCents", skip_serializing_if = "Option::is_none")]
    pub actual_amount_paid_cents: Option<i64>,
    #[serde(rename = "amountCents", skip_serializing_if = "Option::is_none")]
    pub amount_cents: Option<i64>,
    #[serde(rename = "application", skip_serializing_if = "Option::is_none")]
    pub application: Option<Box<models::BtapiApplicationSummaryInfo>>,
    #[serde(rename = "canceledAt", skip_serializing_if = "Option::is_none")]
    pub canceled_at: Option<String>,
    #[serde(rename = "card", skip_serializing_if = "Option::is_none")]
    pub card: Option<Box<models::BtCardInfo>>,
    #[serde(rename = "clientId", skip_serializing_if = "Option::is_none")]
    pub client_id: Option<String>,
    #[serde(rename = "couponAmountOff", skip_serializing_if = "Option::is_none")]
    pub coupon_amount_off: Option<i64>,
    #[serde(rename = "couponPercentOff", skip_serializing_if = "Option::is_none")]
    pub coupon_percent_off: Option<i32>,
    #[serde(rename = "createdBy", skip_serializing_if = "Option::is_none")]
    pub created_by: Option<String>,
    #[serde(rename = "currency", skip_serializing_if = "Option::is_none")]
    pub currency: Option<String>,
    #[serde(rename = "duration", skip_serializing_if = "Option::is_none")]
    pub duration: Option<i32>,
    #[serde(rename = "durationMonths", skip_serializing_if = "Option::is_none")]
    pub duration_months: Option<i32>,
    #[serde(rename = "group", skip_serializing_if = "Option::is_none")]
    pub group: Option<String>,
    /// URI to fetch complete information of the resource.
    #[serde(rename = "href", skip_serializing_if = "Option::is_none")]
    pub href: Option<String>,
    /// Id of the resource.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "lastModified", skip_serializing_if = "Option::is_none")]
    pub last_modified: Option<String>,
    #[serde(rename = "lastModifiedBy", skip_serializing_if = "Option::is_none")]
    pub last_modified_by: Option<String>,
    #[serde(rename = "lightSeats", skip_serializing_if = "Option::is_none")]
    pub light_seats: Option<i64>,
    /// Name of the resource.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "nextCharge", skip_serializing_if = "Option::is_none")]
    pub next_charge: Option<Box<models::NextCharge>>,
    #[serde(rename = "paymentType", skip_serializing_if = "Option::is_none")]
    pub payment_type: Option<i32>,
    #[serde(rename = "pendingCancelation", skip_serializing_if = "Option::is_none")]
    pub pending_cancelation: Option<bool>,
    #[serde(rename = "plan", skip_serializing_if = "Option::is_none")]
    pub plan: Option<Box<models::BtBillingPlanInfo>>,
    #[serde(rename = "planId", skip_serializing_if = "Option::is_none")]
    pub plan_id: Option<String>,
    #[serde(rename = "planName", skip_serializing_if = "Option::is_none")]
    pub plan_name: Option<String>,
    #[serde(rename = "planType", skip_serializing_if = "Option::is_none")]
    pub plan_type: Option<i32>,
    #[serde(rename = "preTrialPlanId", skip_serializing_if = "Option::is_none")]
    pub pre_trial_plan_id: Option<String>,
    #[serde(rename = "proratedCharges", skip_serializing_if = "Option::is_none")]
    pub prorated_charges: Option<Vec<models::ProratedCharges>>,
    #[serde(rename = "proratedTotal", skip_serializing_if = "Option::is_none")]
    pub prorated_total: Option<i64>,
    #[serde(rename = "purchaseDate", skip_serializing_if = "Option::is_none")]
    pub purchase_date: Option<String>,
    #[serde(rename = "resellerName", skip_serializing_if = "Option::is_none")]
    pub reseller_name: Option<String>,
    #[serde(rename = "seats", skip_serializing_if = "Option::is_none")]
    pub seats: Option<i64>,
    #[serde(rename = "state", skip_serializing_if = "Option::is_none")]
    pub state: Option<i32>,
    #[serde(rename = "subscribers", skip_serializing_if = "Option::is_none")]
    pub subscribers: Option<Vec<models::BtPlanSubscriberInfo>>,
    #[serde(rename = "subscriptionBeginAt", skip_serializing_if = "Option::is_none")]
    pub subscription_begin_at: Option<String>,
    #[serde(rename = "subscriptionEndAt", skip_serializing_if = "Option::is_none")]
    pub subscription_end_at: Option<String>,
    #[serde(rename = "subscriptionId", skip_serializing_if = "Option::is_none")]
    pub subscription_id: Option<String>,
    #[serde(rename = "subscriptionType", skip_serializing_if = "Option::is_none")]
    pub subscription_type: Option<i32>,
    #[serde(rename = "taxAmountCents", skip_serializing_if = "Option::is_none")]
    pub tax_amount_cents: Option<i64>,
    #[serde(rename = "trialEnd", skip_serializing_if = "Option::is_none")]
    pub trial_end: Option<String>,
    #[serde(rename = "trialInitiatedBy", skip_serializing_if = "Option::is_none")]
    pub trial_initiated_by: Option<String>,
    /// URI to visualize the resource in a webclient if applicable.
    #[serde(rename = "viewRef", skip_serializing_if = "Option::is_none")]
    pub view_ref: Option<String>,
}

impl BtPurchaseInfo {
    pub fn new() -> BtPurchaseInfo {
        BtPurchaseInfo {
            account_id: None,
            actual_amount_paid_cents: None,
            amount_cents: None,
            application: None,
            canceled_at: None,
            card: None,
            client_id: None,
            coupon_amount_off: None,
            coupon_percent_off: None,
            created_by: None,
            currency: None,
            duration: None,
            duration_months: None,
            group: None,
            href: None,
            id: None,
            last_modified: None,
            last_modified_by: None,
            light_seats: None,
            name: None,
            next_charge: None,
            payment_type: None,
            pending_cancelation: None,
            plan: None,
            plan_id: None,
            plan_name: None,
            plan_type: None,
            pre_trial_plan_id: None,
            prorated_charges: None,
            prorated_total: None,
            purchase_date: None,
            reseller_name: None,
            seats: None,
            state: None,
            subscribers: None,
            subscription_begin_at: None,
            subscription_end_at: None,
            subscription_id: None,
            subscription_type: None,
            tax_amount_cents: None,
            trial_end: None,
            trial_initiated_by: None,
            view_ref: None,
        }
    }
}

