/*
 * Onshape REST API
 *
 * ## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn't used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.
 *
 * The version of the OpenAPI document: 1.198.56658-8969b956ea73
 * Contact: api-support@onshape.zendesk.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct BtPartDisplayData17 {
    #[serde(rename = "appearance", skip_serializing_if = "Option::is_none")]
    pub appearance: Option<Box<models::BtGraphicsAppearance1152>>,
    #[serde(rename = "appearanceForNewCell", skip_serializing_if = "Option::is_none")]
    pub appearance_for_new_cell: Option<Box<models::BtGraphicsAppearance1152>>,
    /// Type of JSON object.
    #[serde(rename = "btType", skip_serializing_if = "Option::is_none")]
    pub bt_type: Option<String>,
    #[serde(rename = "customProperties", skip_serializing_if = "Option::is_none")]
    pub custom_properties: Option<Box<models::BtPartCustomProperties1338>>,
    #[serde(rename = "defaultColorHash", skip_serializing_if = "Option::is_none")]
    pub default_color_hash: Option<String>,
    #[serde(rename = "hasFaults", skip_serializing_if = "Option::is_none")]
    pub has_faults: Option<bool>,
    #[serde(rename = "hidden", skip_serializing_if = "Option::is_none")]
    pub hidden: Option<bool>,
    #[serde(rename = "highBoxCorner", skip_serializing_if = "Option::is_none")]
    pub high_box_corner: Option<Box<models::BtVector3d389>>,
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "isActiveSheetMetal", skip_serializing_if = "Option::is_none")]
    pub is_active_sheet_metal: Option<bool>,
    #[serde(rename = "isMesh", skip_serializing_if = "Option::is_none")]
    pub is_mesh: Option<bool>,
    #[serde(rename = "isModifiable", skip_serializing_if = "Option::is_none")]
    pub is_modifiable: Option<bool>,
    #[serde(rename = "isSheet", skip_serializing_if = "Option::is_none")]
    pub is_sheet: Option<bool>,
    #[serde(rename = "isSolid", skip_serializing_if = "Option::is_none")]
    pub is_solid: Option<bool>,
    #[serde(rename = "isWire", skip_serializing_if = "Option::is_none")]
    pub is_wire: Option<bool>,
    #[serde(rename = "lowBoxCorner", skip_serializing_if = "Option::is_none")]
    pub low_box_corner: Option<Box<models::BtVector3d389>>,
    #[serde(rename = "material", skip_serializing_if = "Option::is_none")]
    pub material: Option<Box<models::BtPartMaterial1445>>,
    #[serde(rename = "materialForNewCell", skip_serializing_if = "Option::is_none")]
    pub material_for_new_cell: Option<Box<models::BtPartMaterial1445>>,
    #[serde(rename = "meshState", skip_serializing_if = "Option::is_none")]
    pub mesh_state: Option<models::GbtMeshState>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "nameForNewCell", skip_serializing_if = "Option::is_none")]
    pub name_for_new_cell: Option<String>,
    #[serde(rename = "ordinal", skip_serializing_if = "Option::is_none")]
    pub ordinal: Option<i32>,
    #[serde(rename = "partId", skip_serializing_if = "Option::is_none")]
    pub part_id: Option<String>,
    #[serde(rename = "propertyIdToSource", skip_serializing_if = "Option::is_none")]
    pub property_id_to_source: Option<std::collections::HashMap<String, models::BtPartMetadataSource2895>>,
    #[serde(rename = "referencingConfiguredPartNodeIds", skip_serializing_if = "Option::is_none")]
    pub referencing_configured_part_node_ids: Option<Vec<models::BtObjectId>>,
    #[serde(rename = "visibility", skip_serializing_if = "Option::is_none")]
    pub visibility: Option<models::GbtPartVisibility>,
}

impl BtPartDisplayData17 {
    pub fn new() -> BtPartDisplayData17 {
        BtPartDisplayData17 {
            appearance: None,
            appearance_for_new_cell: None,
            bt_type: None,
            custom_properties: None,
            default_color_hash: None,
            has_faults: None,
            hidden: None,
            high_box_corner: None,
            id: None,
            is_active_sheet_metal: None,
            is_mesh: None,
            is_modifiable: None,
            is_sheet: None,
            is_solid: None,
            is_wire: None,
            low_box_corner: None,
            material: None,
            material_for_new_cell: None,
            mesh_state: None,
            name: None,
            name_for_new_cell: None,
            ordinal: None,
            part_id: None,
            property_id_to_source: None,
            referencing_configured_part_node_ids: None,
            visibility: None,
        }
    }
}

