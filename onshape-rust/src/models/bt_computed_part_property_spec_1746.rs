/*
 * Onshape REST API
 *
 * ## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn't used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.
 *
 * The version of the OpenAPI document: 1.198.56658-8969b956ea73
 * Contact: api-support@onshape.zendesk.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct BtComputedPartPropertySpec1746 {
    /// Type of JSON object.
    #[serde(rename = "btType", skip_serializing_if = "Option::is_none")]
    pub bt_type: Option<String>,
    #[serde(rename = "additionalLocalizedStrings", skip_serializing_if = "Option::is_none")]
    pub additional_localized_strings: Option<i32>,
    #[serde(rename = "allParameters", skip_serializing_if = "Option::is_none")]
    pub all_parameters: Option<Vec<models::BtParameterSpec6>>,
    #[serde(rename = "computedPartPropertySpec", skip_serializing_if = "Option::is_none")]
    pub computed_part_property_spec: Option<bool>,
    #[serde(rename = "descriptionImageUri", skip_serializing_if = "Option::is_none")]
    pub description_image_uri: Option<String>,
    #[serde(rename = "editingLogic", skip_serializing_if = "Option::is_none")]
    pub editing_logic: Option<Box<models::BtEditingLogic2350>>,
    #[serde(rename = "featureNameTemplate", skip_serializing_if = "Option::is_none")]
    pub feature_name_template: Option<String>,
    #[serde(rename = "featureType", skip_serializing_if = "Option::is_none")]
    pub feature_type: Option<String>,
    #[serde(rename = "featureTypeDescription", skip_serializing_if = "Option::is_none")]
    pub feature_type_description: Option<String>,
    #[serde(rename = "featureTypeName", skip_serializing_if = "Option::is_none")]
    pub feature_type_name: Option<String>,
    #[serde(rename = "filterSelectors", skip_serializing_if = "Option::is_none")]
    pub filter_selectors: Option<Vec<String>>,
    #[serde(rename = "fullFeatureType", skip_serializing_if = "Option::is_none")]
    pub full_feature_type: Option<String>,
    #[serde(rename = "groups", skip_serializing_if = "Option::is_none")]
    pub groups: Option<Vec<models::BtParameterGroupSpec3469>>,
    #[serde(rename = "iconUri", skip_serializing_if = "Option::is_none")]
    pub icon_uri: Option<String>,
    #[serde(rename = "languageVersion", skip_serializing_if = "Option::is_none")]
    pub language_version: Option<i32>,
    #[serde(rename = "linkedLocationName", skip_serializing_if = "Option::is_none")]
    pub linked_location_name: Option<String>,
    #[serde(rename = "localizableName", skip_serializing_if = "Option::is_none")]
    pub localizable_name: Option<String>,
    #[serde(rename = "localizedName", skip_serializing_if = "Option::is_none")]
    pub localized_name: Option<String>,
    #[serde(rename = "locationInfos", skip_serializing_if = "Option::is_none")]
    pub location_infos: Option<Vec<models::BtLocationInfo226>>,
    #[serde(rename = "manipulatorChangeFunction", skip_serializing_if = "Option::is_none")]
    pub manipulator_change_function: Option<String>,
    #[serde(rename = "namespace", skip_serializing_if = "Option::is_none")]
    pub namespace: Option<String>,
    #[serde(rename = "namespaceIncludingEnums", skip_serializing_if = "Option::is_none")]
    pub namespace_including_enums: Option<String>,
    #[serde(rename = "namespaceTheSource", skip_serializing_if = "Option::is_none")]
    pub namespace_the_source: Option<bool>,
    #[serde(rename = "parameterIdToSpec", skip_serializing_if = "Option::is_none")]
    pub parameter_id_to_spec: Option<std::collections::HashMap<String, models::BtParameterSpec6>>,
    #[serde(rename = "parameters", skip_serializing_if = "Option::is_none")]
    pub parameters: Option<Vec<models::BtParameterSpec6>>,
    #[serde(rename = "signature", skip_serializing_if = "Option::is_none")]
    pub signature: Option<String>,
    #[serde(rename = "sourceLocation", skip_serializing_if = "Option::is_none")]
    pub source_location: Option<Box<models::BtLocationInfo226>>,
    #[serde(rename = "sourceMicroversionId", skip_serializing_if = "Option::is_none")]
    pub source_microversion_id: Option<String>,
    #[serde(rename = "stringsToLocalize", skip_serializing_if = "Option::is_none")]
    pub strings_to_localize: Option<Vec<String>>,
    #[serde(rename = "tableSpec", skip_serializing_if = "Option::is_none")]
    pub table_spec: Option<bool>,
    #[serde(rename = "toleranceSpec", skip_serializing_if = "Option::is_none")]
    pub tolerance_spec: Option<bool>,
    #[serde(rename = "tooltipTemplate", skip_serializing_if = "Option::is_none")]
    pub tooltip_template: Option<String>,
    #[serde(rename = "uiHints", skip_serializing_if = "Option::is_none")]
    pub ui_hints: Option<Vec<models::GbtuiHint>>,
    #[serde(rename = "variableStudioReferenceSpec", skip_serializing_if = "Option::is_none")]
    pub variable_studio_reference_spec: Option<bool>,
    #[serde(rename = "computedPartPropertySpecId", skip_serializing_if = "Option::is_none")]
    pub computed_part_property_spec_id: Option<String>,
    #[serde(rename = "propertyFunctionReturnType", skip_serializing_if = "Option::is_none")]
    pub property_function_return_type: Option<String>,
}

impl BtComputedPartPropertySpec1746 {
    pub fn new() -> BtComputedPartPropertySpec1746 {
        BtComputedPartPropertySpec1746 {
            bt_type: None,
            additional_localized_strings: None,
            all_parameters: None,
            computed_part_property_spec: None,
            description_image_uri: None,
            editing_logic: None,
            feature_name_template: None,
            feature_type: None,
            feature_type_description: None,
            feature_type_name: None,
            filter_selectors: None,
            full_feature_type: None,
            groups: None,
            icon_uri: None,
            language_version: None,
            linked_location_name: None,
            localizable_name: None,
            localized_name: None,
            location_infos: None,
            manipulator_change_function: None,
            namespace: None,
            namespace_including_enums: None,
            namespace_the_source: None,
            parameter_id_to_spec: None,
            parameters: None,
            signature: None,
            source_location: None,
            source_microversion_id: None,
            strings_to_localize: None,
            table_spec: None,
            tolerance_spec: None,
            tooltip_template: None,
            ui_hints: None,
            variable_studio_reference_spec: None,
            computed_part_property_spec_id: None,
            property_function_return_type: None,
        }
    }
}

