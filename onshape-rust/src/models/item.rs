/*
 * Onshape REST API
 *
 * ## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn't used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.
 *
 * The version of the OpenAPI document: 1.198.56658-8969b956ea73
 * Contact: api-support@onshape.zendesk.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
#[serde(tag = "jsonType")]
pub enum Item {
    #[serde(rename="publication-blob-item")]
    BlobItem {
        #[serde(rename = "applicationTarget", skip_serializing_if = "Option::is_none")]
        application_target: Option<Box<models::BtApplicationTargetInfo>>,
        #[serde(rename = "dataType", skip_serializing_if = "Option::is_none")]
        data_type: Option<String>,
        #[serde(rename = "documentId", skip_serializing_if = "Option::is_none")]
        document_id: Option<String>,
        #[serde(rename = "elementId", skip_serializing_if = "Option::is_none")]
        element_id: Option<String>,
        #[serde(rename = "elementType", skip_serializing_if = "Option::is_none")]
        element_type: Option<models::GbtElementType>,
        #[serde(rename = "encodedConfiguration", skip_serializing_if = "Option::is_none")]
        encoded_configuration: Option<String>,
        #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
        id: Option<String>,
        #[serde(rename = "partId", skip_serializing_if = "Option::is_none")]
        part_id: Option<String>,
        #[serde(rename = "partName", skip_serializing_if = "Option::is_none")]
        part_name: Option<String>,
        #[serde(rename = "partNumber", skip_serializing_if = "Option::is_none")]
        part_number: Option<String>,
        #[serde(rename = "revision", skip_serializing_if = "Option::is_none")]
        revision: Option<String>,
        #[serde(rename = "revisionId", skip_serializing_if = "Option::is_none")]
        revision_id: Option<String>,
        #[serde(rename = "state", skip_serializing_if = "Option::is_none")]
        state: Option<i32>,
        #[serde(rename = "versionId", skip_serializing_if = "Option::is_none")]
        version_id: Option<String>,
        #[serde(rename = "versionName", skip_serializing_if = "Option::is_none")]
        version_name: Option<String>,
    },
}

impl Default for Item {
    fn default() -> Self {
        Self::BlobItem {
            application_target: Default::default(),
            data_type: Default::default(),
            document_id: Default::default(),
            element_id: Default::default(),
            element_type: Default::default(),
            encoded_configuration: Default::default(),
            id: Default::default(),
            part_id: Default::default(),
            part_name: Default::default(),
            part_number: Default::default(),
            revision: Default::default(),
            revision_id: Default::default(),
            state: Default::default(),
            version_id: Default::default(),
            version_name: Default::default(),
        }
        
    }
}


