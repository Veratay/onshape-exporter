/*
 * Onshape REST API
 *
 * ## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn't used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.
 *
 * The version of the OpenAPI document: 1.198.56658-8969b956ea73
 * Contact: api-support@onshape.zendesk.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct BtAssemblyPartInfo {
    #[serde(rename = "bodyType", skip_serializing_if = "Option::is_none")]
    pub body_type: Option<models::BtAssemblyPartBodyType>,
    #[serde(rename = "configuration", skip_serializing_if = "Option::is_none")]
    pub configuration: Option<String>,
    #[serde(rename = "documentId", skip_serializing_if = "Option::is_none")]
    pub document_id: Option<String>,
    #[serde(rename = "documentMicroversion", skip_serializing_if = "Option::is_none")]
    pub document_microversion: Option<String>,
    #[serde(rename = "documentVersion", skip_serializing_if = "Option::is_none")]
    pub document_version: Option<String>,
    #[serde(rename = "elementId", skip_serializing_if = "Option::is_none")]
    pub element_id: Option<String>,
    #[serde(rename = "fullConfiguration", skip_serializing_if = "Option::is_none")]
    pub full_configuration: Option<String>,
    #[serde(rename = "isStandardContent", skip_serializing_if = "Option::is_none")]
    pub is_standard_content: Option<bool>,
    #[serde(rename = "mateConnectors", skip_serializing_if = "Option::is_none")]
    pub mate_connectors: Option<Vec<models::BtAssemblyMateConnectorInfo>>,
    #[serde(rename = "partId", skip_serializing_if = "Option::is_none")]
    pub part_id: Option<String>,
    #[serde(rename = "partNumber", skip_serializing_if = "Option::is_none")]
    pub part_number: Option<String>,
    #[serde(rename = "revision", skip_serializing_if = "Option::is_none")]
    pub revision: Option<String>,
}

impl BtAssemblyPartInfo {
    pub fn new() -> BtAssemblyPartInfo {
        BtAssemblyPartInfo {
            body_type: None,
            configuration: None,
            document_id: None,
            document_microversion: None,
            document_version: None,
            element_id: None,
            full_configuration: None,
            is_standard_content: None,
            mate_connectors: None,
            part_id: None,
            part_number: None,
            revision: None,
        }
    }
}

