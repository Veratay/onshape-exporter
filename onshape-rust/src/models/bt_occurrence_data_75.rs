/*
 * Onshape REST API
 *
 * ## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn't used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.
 *
 * The version of the OpenAPI document: 1.198.56658-8969b956ea73
 * Contact: api-support@onshape.zendesk.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct BtOccurrenceData75 {
    /// Type of JSON object.
    #[serde(rename = "btType", skip_serializing_if = "Option::is_none")]
    pub bt_type: Option<String>,
    #[serde(rename = "featureData", skip_serializing_if = "Option::is_none")]
    pub feature_data: Option<std::collections::HashMap<String, models::BtFeatureOccurrenceData775>>,
    #[serde(rename = "forceHighestQualityTessellation", skip_serializing_if = "Option::is_none")]
    pub force_highest_quality_tessellation: Option<bool>,
    #[serde(rename = "hidden", skip_serializing_if = "Option::is_none")]
    pub hidden: Option<bool>,
    #[serde(rename = "isFixed", skip_serializing_if = "Option::is_none")]
    pub is_fixed: Option<bool>,
    #[serde(rename = "isHidden", skip_serializing_if = "Option::is_none")]
    pub is_hidden: Option<bool>,
    #[serde(rename = "lockInfo", skip_serializing_if = "Option::is_none")]
    pub lock_info: Option<Box<models::BtLockedSubAssembly4590>>,
    #[serde(rename = "nodeId", skip_serializing_if = "Option::is_none")]
    pub node_id: Option<String>,
    #[serde(rename = "occurrence", skip_serializing_if = "Option::is_none")]
    pub occurrence: Option<Box<models::BtOccurrence74>>,
    #[serde(rename = "transform", skip_serializing_if = "Option::is_none")]
    pub transform: Option<Box<models::BtbsMatrix386>>,
}

impl BtOccurrenceData75 {
    pub fn new() -> BtOccurrenceData75 {
        BtOccurrenceData75 {
            bt_type: None,
            feature_data: None,
            force_highest_quality_tessellation: None,
            hidden: None,
            is_fixed: None,
            is_hidden: None,
            lock_info: None,
            node_id: None,
            occurrence: None,
            transform: None,
        }
    }
}

