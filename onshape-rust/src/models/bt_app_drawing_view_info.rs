/*
 * Onshape REST API
 *
 * ## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn't used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.
 *
 * The version of the OpenAPI document: 1.198.56658-8969b956ea73
 * Contact: api-support@onshape.zendesk.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct BtAppDrawingViewInfo {
    #[serde(rename = "associativityChangeId", skip_serializing_if = "Option::is_none")]
    pub associativity_change_id: Option<String>,
    #[serde(rename = "bomReferenceId", skip_serializing_if = "Option::is_none")]
    pub bom_reference_id: Option<String>,
    #[serde(rename = "brokenOutBBoxes", skip_serializing_if = "Option::is_none")]
    pub broken_out_b_boxes: Option<std::collections::HashMap<String, models::BtBoundingBox1052>>,
    #[serde(rename = "brokenOutEndConditions", skip_serializing_if = "Option::is_none")]
    pub broken_out_end_conditions: Option<std::collections::HashMap<String, models::BtBrokenOutEndCondition1107>>,
    #[serde(rename = "brokenOutPointNumbers", skip_serializing_if = "Option::is_none")]
    pub broken_out_point_numbers: Option<Vec<i32>>,
    #[serde(rename = "changeId", skip_serializing_if = "Option::is_none")]
    pub change_id: Option<String>,
    #[serde(rename = "computeIntersection", skip_serializing_if = "Option::is_none")]
    pub compute_intersection: Option<bool>,
    #[serde(rename = "cutPoint", skip_serializing_if = "Option::is_none")]
    pub cut_point: Option<Vec<f64>>,
    #[serde(rename = "depthSectionEndCondition", skip_serializing_if = "Option::is_none")]
    pub depth_section_end_condition: Option<Box<models::BtBrokenOutEndCondition1107>>,
    #[serde(rename = "displayStateId", skip_serializing_if = "Option::is_none")]
    pub display_state_id: Option<String>,
    /// `0: OK (healthy) | 1: INFO | 2: WARNING | 3: ERROR (dangling or view generation call failed) | 4: UNKNOWN`
    #[serde(rename = "errorCode", skip_serializing_if = "Option::is_none")]
    pub error_code: Option<i32>,
    /// A human-readable value for the error that occurred, if one occurred.
    #[serde(rename = "errorDescription", skip_serializing_if = "Option::is_none")]
    pub error_description: Option<String>,
    #[serde(rename = "errorValue", skip_serializing_if = "Option::is_none")]
    pub error_value: Option<models::BtAppElementErrorCode>,
    #[serde(rename = "explodedViewId", skip_serializing_if = "Option::is_none")]
    pub exploded_view_id: Option<String>,
    #[serde(rename = "hasSecondaryViewDefinition", skip_serializing_if = "Option::is_none")]
    pub has_secondary_view_definition: Option<bool>,
    #[serde(rename = "hiddenLines", skip_serializing_if = "Option::is_none")]
    pub hidden_lines: Option<String>,
    #[serde(rename = "ignoreFaultyParts", skip_serializing_if = "Option::is_none")]
    pub ignore_faulty_parts: Option<bool>,
    #[serde(rename = "includeHiddenInstances", skip_serializing_if = "Option::is_none")]
    pub include_hidden_instances: Option<bool>,
    #[serde(rename = "includeSurfaces", skip_serializing_if = "Option::is_none")]
    pub include_surfaces: Option<bool>,
    #[serde(rename = "includeWires", skip_serializing_if = "Option::is_none")]
    pub include_wires: Option<bool>,
    #[serde(rename = "isAlignedSection", skip_serializing_if = "Option::is_none")]
    pub is_aligned_section: Option<bool>,
    #[serde(rename = "isBrokenOutSection", skip_serializing_if = "Option::is_none")]
    pub is_broken_out_section: Option<bool>,
    #[serde(rename = "isCopiedView", skip_serializing_if = "Option::is_none")]
    pub is_copied_view: Option<bool>,
    #[serde(rename = "isCropView", skip_serializing_if = "Option::is_none")]
    pub is_crop_view: Option<bool>,
    #[serde(rename = "isPartialSection", skip_serializing_if = "Option::is_none")]
    pub is_partial_section: Option<bool>,
    #[serde(rename = "isSectionOfAlignedSection", skip_serializing_if = "Option::is_none")]
    pub is_section_of_aligned_section: Option<bool>,
    #[serde(rename = "isSectionOfSectionOnBase", skip_serializing_if = "Option::is_none")]
    pub is_section_of_section_on_base: Option<bool>,
    #[serde(rename = "isSurface", skip_serializing_if = "Option::is_none")]
    pub is_surface: Option<bool>,
    #[serde(rename = "modelReferenceId", skip_serializing_if = "Option::is_none")]
    pub model_reference_id: Option<String>,
    #[serde(rename = "modificationId", skip_serializing_if = "Option::is_none")]
    pub modification_id: Option<String>,
    #[serde(rename = "namedPositionId", skip_serializing_if = "Option::is_none")]
    pub named_position_id: Option<String>,
    #[serde(rename = "occurrenceOrQueryToGeometryProperties", skip_serializing_if = "Option::is_none")]
    pub occurrence_or_query_to_geometry_properties: Option<std::collections::HashMap<String, models::BtAppElementViewGeometryProperties1100>>,
    #[serde(rename = "offsetSectionPoints", skip_serializing_if = "Option::is_none")]
    pub offset_section_points: Option<Vec<f64>>,
    #[serde(rename = "parentChangeId", skip_serializing_if = "Option::is_none")]
    pub parent_change_id: Option<String>,
    #[serde(rename = "parentViewId", skip_serializing_if = "Option::is_none")]
    pub parent_view_id: Option<String>,
    #[serde(rename = "perspective", skip_serializing_if = "Option::is_none")]
    pub perspective: Option<bool>,
    #[serde(rename = "projectionAngle", skip_serializing_if = "Option::is_none")]
    pub projection_angle: Option<String>,
    #[serde(rename = "qualityOption", skip_serializing_if = "Option::is_none")]
    pub quality_option: Option<i32>,
    #[serde(rename = "renderSketches", skip_serializing_if = "Option::is_none")]
    pub render_sketches: Option<bool>,
    #[serde(rename = "sectionId", skip_serializing_if = "Option::is_none")]
    pub section_id: Option<String>,
    #[serde(rename = "sectionPlanes", skip_serializing_if = "Option::is_none")]
    pub section_planes: Option<Vec<f64>>,
    #[serde(rename = "showAutoCenterlines", skip_serializing_if = "Option::is_none")]
    pub show_auto_centerlines: Option<bool>,
    #[serde(rename = "showAutoCentermarks", skip_serializing_if = "Option::is_none")]
    pub show_auto_centermarks: Option<bool>,
    #[serde(rename = "showCutGeomOnly", skip_serializing_if = "Option::is_none")]
    pub show_cut_geom_only: Option<bool>,
    #[serde(rename = "showTangentLines", skip_serializing_if = "Option::is_none")]
    pub show_tangent_lines: Option<bool>,
    #[serde(rename = "showThreads", skip_serializing_if = "Option::is_none")]
    pub show_threads: Option<bool>,
    #[serde(rename = "showViewingPlane", skip_serializing_if = "Option::is_none")]
    pub show_viewing_plane: Option<bool>,
    #[serde(rename = "simplificationOption", skip_serializing_if = "Option::is_none")]
    pub simplification_option: Option<i32>,
    #[serde(rename = "simplificationThreshold", skip_serializing_if = "Option::is_none")]
    pub simplification_threshold: Option<f64>,
    #[serde(rename = "useParentViewSectionData", skip_serializing_if = "Option::is_none")]
    pub use_parent_view_section_data: Option<bool>,
    #[serde(rename = "viewDirection", skip_serializing_if = "Option::is_none")]
    pub view_direction: Option<Vec<f64>>,
    #[serde(rename = "viewId", skip_serializing_if = "Option::is_none")]
    pub view_id: Option<String>,
    #[serde(rename = "viewMatrix", skip_serializing_if = "Option::is_none")]
    pub view_matrix: Option<Vec<f64>>,
    #[serde(rename = "viewVersion", skip_serializing_if = "Option::is_none")]
    pub view_version: Option<i32>,
}

impl BtAppDrawingViewInfo {
    pub fn new() -> BtAppDrawingViewInfo {
        BtAppDrawingViewInfo {
            associativity_change_id: None,
            bom_reference_id: None,
            broken_out_b_boxes: None,
            broken_out_end_conditions: None,
            broken_out_point_numbers: None,
            change_id: None,
            compute_intersection: None,
            cut_point: None,
            depth_section_end_condition: None,
            display_state_id: None,
            error_code: None,
            error_description: None,
            error_value: None,
            exploded_view_id: None,
            has_secondary_view_definition: None,
            hidden_lines: None,
            ignore_faulty_parts: None,
            include_hidden_instances: None,
            include_surfaces: None,
            include_wires: None,
            is_aligned_section: None,
            is_broken_out_section: None,
            is_copied_view: None,
            is_crop_view: None,
            is_partial_section: None,
            is_section_of_aligned_section: None,
            is_section_of_section_on_base: None,
            is_surface: None,
            model_reference_id: None,
            modification_id: None,
            named_position_id: None,
            occurrence_or_query_to_geometry_properties: None,
            offset_section_points: None,
            parent_change_id: None,
            parent_view_id: None,
            perspective: None,
            projection_angle: None,
            quality_option: None,
            render_sketches: None,
            section_id: None,
            section_planes: None,
            show_auto_centerlines: None,
            show_auto_centermarks: None,
            show_cut_geom_only: None,
            show_tangent_lines: None,
            show_threads: None,
            show_viewing_plane: None,
            simplification_option: None,
            simplification_threshold: None,
            use_parent_view_section_data: None,
            view_direction: None,
            view_id: None,
            view_matrix: None,
            view_version: None,
        }
    }
}

