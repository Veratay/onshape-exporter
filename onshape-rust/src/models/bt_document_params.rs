/*
 * Onshape REST API
 *
 * ## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn't used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.
 *
 * The version of the OpenAPI document: 1.198.56658-8969b956ea73
 * Contact: api-support@onshape.zendesk.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// BtDocumentParams : Parameters for creating and updating documents.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct BtDocumentParams {
    /// Document description.
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// List of element IDs to include in the document.
    #[serde(rename = "elements", skip_serializing_if = "Option::is_none")]
    pub elements: Option<Vec<models::BtDocumentElementCreationDescriptor>>,
    /// `true` if the current user can toggle the Force Export Rule flag on a document.
    #[serde(rename = "forceExportRules", skip_serializing_if = "Option::is_none")]
    pub force_export_rules: Option<bool>,
    /// Set to `true` for debugging.
    #[serde(rename = "generateUnknownMessages", skip_serializing_if = "Option::is_none")]
    pub generate_unknown_messages: Option<bool>,
    /// Set to `true` to generate an empty document.
    #[serde(rename = "isEmptyContent", skip_serializing_if = "Option::is_none")]
    pub is_empty_content: Option<bool>,
    /// Set to `true` to make the document public.
    #[serde(rename = "isPublic", skip_serializing_if = "Option::is_none")]
    pub is_public: Option<bool>,
    /// Document name.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Set to `true` to indicate that revisions are not managed for this document.
    #[serde(rename = "notRevisionManaged", skip_serializing_if = "Option::is_none")]
    pub not_revision_managed: Option<bool>,
    /// The document owner's email address.
    #[serde(rename = "ownerEmail", skip_serializing_if = "Option::is_none")]
    pub owner_email: Option<String>,
    /// If `ownerType=USER`, this is the user ID. If `ownerType=COMPANY`, this is the company ID.
    #[serde(rename = "ownerId", skip_serializing_if = "Option::is_none")]
    pub owner_id: Option<String>,
    /// The document's owner type. `USER=0` | `COMPANY=1` | `ONSHAPE=2`
    #[serde(rename = "ownerType", skip_serializing_if = "Option::is_none")]
    pub owner_type: Option<i32>,
    /// Document ID of this document's parent.
    #[serde(rename = "parentId", skip_serializing_if = "Option::is_none")]
    pub parent_id: Option<String>,
    /// ID of the project this document belongs to.
    #[serde(rename = "projectId", skip_serializing_if = "Option::is_none")]
    pub project_id: Option<String>,
    /// Array of strings to set as tags for the document.
    #[serde(rename = "tags", skip_serializing_if = "Option::is_none")]
    pub tags: Option<Vec<String>>,
}

impl BtDocumentParams {
    /// Parameters for creating and updating documents.
    pub fn new() -> BtDocumentParams {
        BtDocumentParams {
            description: None,
            elements: None,
            force_export_rules: None,
            generate_unknown_messages: None,
            is_empty_content: None,
            is_public: None,
            name: None,
            not_revision_managed: None,
            owner_email: None,
            owner_id: None,
            owner_type: None,
            parent_id: None,
            project_id: None,
            tags: None,
        }
    }
}

