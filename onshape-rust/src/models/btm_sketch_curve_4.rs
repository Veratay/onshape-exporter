/*
 * Onshape REST API
 *
 * ## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn't used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.
 *
 * The version of the OpenAPI document: 1.198.56658-8969b956ea73
 * Contact: api-support@onshape.zendesk.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
#[serde(tag = "btType")]
pub enum BtmSketchCurve4 {
    #[serde(rename="BTMSketchCurveSegment-155")]
    BtmSketchCurveSegment155 {
        /// Element microversion that is being imported.
        #[serde(rename = "importMicroversion", skip_serializing_if = "Option::is_none")]
        import_microversion: Option<String>,
        #[serde(rename = "nodeId", skip_serializing_if = "Option::is_none")]
        node_id: Option<String>,
        #[serde(rename = "combinedSketchEntityType", skip_serializing_if = "Option::is_none")]
        combined_sketch_entity_type: Option<Box<models::CombinedSketchEntityType>>,
        #[serde(rename = "entityId", skip_serializing_if = "Option::is_none")]
        entity_id: Option<String>,
        #[serde(rename = "entityIdAndReplaceInDependentFields", skip_serializing_if = "Option::is_none")]
        entity_id_and_replace_in_dependent_fields: Option<String>,
        #[serde(rename = "index", skip_serializing_if = "Option::is_none")]
        index: Option<i32>,
        #[serde(rename = "namespace", skip_serializing_if = "Option::is_none")]
        namespace: Option<String>,
        #[serde(rename = "parameters", skip_serializing_if = "Option::is_none")]
        parameters: Option<Vec<models::BtmParameter1>>,
        #[serde(rename = "controlBoxIds", skip_serializing_if = "Option::is_none")]
        control_box_ids: Option<Vec<String>>,
        #[serde(rename = "entityType", skip_serializing_if = "Option::is_none")]
        entity_type: Option<models::GbtSketchEntityType>,
        #[serde(rename = "functionName", skip_serializing_if = "Option::is_none")]
        function_name: Option<String>,
        #[serde(rename = "isConstruction", skip_serializing_if = "Option::is_none")]
        is_construction: Option<bool>,
        #[serde(rename = "isFromEndpointSplineHandle", skip_serializing_if = "Option::is_none")]
        is_from_endpoint_spline_handle: Option<bool>,
        #[serde(rename = "isFromSplineControlPolygon", skip_serializing_if = "Option::is_none")]
        is_from_spline_control_polygon: Option<bool>,
        #[serde(rename = "isFromSplineHandle", skip_serializing_if = "Option::is_none")]
        is_from_spline_handle: Option<bool>,
        #[serde(rename = "centerId", skip_serializing_if = "Option::is_none")]
        center_id: Option<String>,
        #[serde(rename = "internalIds", skip_serializing_if = "Option::is_none")]
        internal_ids: Option<Vec<String>>,
    },
}

impl Default for BtmSketchCurve4 {
    fn default() -> Self {
        Self::BtmSketchCurveSegment155 {
            import_microversion: Default::default(),
            node_id: Default::default(),
            combined_sketch_entity_type: Default::default(),
            entity_id: Default::default(),
            entity_id_and_replace_in_dependent_fields: Default::default(),
            index: Default::default(),
            namespace: Default::default(),
            parameters: Default::default(),
            control_box_ids: Default::default(),
            entity_type: Default::default(),
            function_name: Default::default(),
            is_construction: Default::default(),
            is_from_endpoint_spline_handle: Default::default(),
            is_from_spline_control_polygon: Default::default(),
            is_from_spline_handle: Default::default(),
            center_id: Default::default(),
            internal_ids: Default::default(),
        }
        
    }
}


