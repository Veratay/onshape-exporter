/*
 * Onshape REST API
 *
 * ## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn't used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.
 *
 * The version of the OpenAPI document: 1.198.56658-8969b956ea73
 * Contact: api-support@onshape.zendesk.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct BtWorkflowableObjectObserver {
    #[serde(rename = "adminOverride", skip_serializing_if = "Option::is_none")]
    pub admin_override: Option<bool>,
    #[serde(rename = "approvalDate", skip_serializing_if = "Option::is_none")]
    pub approval_date: Option<String>,
    #[serde(rename = "approvalState", skip_serializing_if = "Option::is_none")]
    pub approval_state: Option<models::BtWorkflowObserverState>,
    #[serde(rename = "approverId", skip_serializing_if = "Option::is_none")]
    pub approver_id: Option<String>,
    #[serde(rename = "approverName", skip_serializing_if = "Option::is_none")]
    pub approver_name: Option<String>,
    #[serde(rename = "associatedStates", skip_serializing_if = "Option::is_none")]
    pub associated_states: Option<String>,
    #[serde(rename = "companyId", skip_serializing_if = "Option::is_none")]
    pub company_id: Option<String>,
    #[serde(rename = "createdAt", skip_serializing_if = "Option::is_none")]
    pub created_at: Option<String>,
    #[serde(rename = "createdBy", skip_serializing_if = "Option::is_none")]
    pub created_by: Option<String>,
    #[serde(rename = "creatorOverride", skip_serializing_if = "Option::is_none")]
    pub creator_override: Option<bool>,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "entryId", skip_serializing_if = "Option::is_none")]
    pub entry_id: Option<String>,
    #[serde(rename = "entryType", skip_serializing_if = "Option::is_none")]
    pub entry_type: Option<models::BtWorkflowObserverEntryType>,
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "modifiedAt", skip_serializing_if = "Option::is_none")]
    pub modified_at: Option<String>,
    #[serde(rename = "modifiedBy", skip_serializing_if = "Option::is_none")]
    pub modified_by: Option<String>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "new", skip_serializing_if = "Option::is_none")]
    pub new: Option<bool>,
    #[serde(rename = "objectId", skip_serializing_if = "Option::is_none")]
    pub object_id: Option<String>,
    #[serde(rename = "observationType", skip_serializing_if = "Option::is_none")]
    pub observation_type: Option<i32>,
    #[serde(rename = "propertyId", skip_serializing_if = "Option::is_none")]
    pub property_id: Option<String>,
    #[serde(rename = "rejectionDate", skip_serializing_if = "Option::is_none")]
    pub rejection_date: Option<String>,
    #[serde(rename = "removable", skip_serializing_if = "Option::is_none")]
    pub removable: Option<bool>,
}

impl BtWorkflowableObjectObserver {
    pub fn new() -> BtWorkflowableObjectObserver {
        BtWorkflowableObjectObserver {
            admin_override: None,
            approval_date: None,
            approval_state: None,
            approver_id: None,
            approver_name: None,
            associated_states: None,
            company_id: None,
            created_at: None,
            created_by: None,
            creator_override: None,
            description: None,
            entry_id: None,
            entry_type: None,
            id: None,
            modified_at: None,
            modified_by: None,
            name: None,
            new: None,
            object_id: None,
            observation_type: None,
            property_id: None,
            rejection_date: None,
            removable: None,
        }
    }
}

