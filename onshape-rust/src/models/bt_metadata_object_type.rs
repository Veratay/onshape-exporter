/*
 * Onshape REST API
 *
 * ## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn't used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.
 *
 * The version of the OpenAPI document: 1.198.56658-8969b956ea73
 * Contact: api-support@onshape.zendesk.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum BtMetadataObjectType {
    #[serde(rename = "GLOBAL")]
    Global,
    #[serde(rename = "DOCUMENT")]
    Document,
    #[serde(rename = "PART")]
    Part,
    #[serde(rename = "ASSEMBLY")]
    Assembly,
    #[serde(rename = "DRAWING")]
    Drawing,
    #[serde(rename = "PART_STUDIO")]
    PartStudio,
    #[serde(rename = "BLOB_ELEMENT")]
    BlobElement,
    #[serde(rename = "APP_ELEMENT")]
    AppElement,
    #[serde(rename = "VERSION")]
    Version,
    #[serde(rename = "WORKSPACE")]
    Workspace,
    #[serde(rename = "PROJECT")]
    Project,
    #[serde(rename = "ITEM")]
    Item,
    #[serde(rename = "FEATURE_STUDIO")]
    FeatureStudio,
    #[serde(rename = "CHANGE_REQUEST")]
    ChangeRequest,
    #[serde(rename = "TASK")]
    Task,
    #[serde(rename = "CHANGE_ORDER")]
    ChangeOrder,
    #[serde(rename = "CHANGE_TASK")]
    ChangeTask,
    #[serde(rename = "VARIABLE_STUDIO")]
    VariableStudio,
    #[serde(rename = "DRAWING_ANNOTATIONS")]
    DrawingAnnotations,
    #[serde(rename = "FOLDER")]
    Folder,

}

impl std::fmt::Display for BtMetadataObjectType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Global => write!(f, "GLOBAL"),
            Self::Document => write!(f, "DOCUMENT"),
            Self::Part => write!(f, "PART"),
            Self::Assembly => write!(f, "ASSEMBLY"),
            Self::Drawing => write!(f, "DRAWING"),
            Self::PartStudio => write!(f, "PART_STUDIO"),
            Self::BlobElement => write!(f, "BLOB_ELEMENT"),
            Self::AppElement => write!(f, "APP_ELEMENT"),
            Self::Version => write!(f, "VERSION"),
            Self::Workspace => write!(f, "WORKSPACE"),
            Self::Project => write!(f, "PROJECT"),
            Self::Item => write!(f, "ITEM"),
            Self::FeatureStudio => write!(f, "FEATURE_STUDIO"),
            Self::ChangeRequest => write!(f, "CHANGE_REQUEST"),
            Self::Task => write!(f, "TASK"),
            Self::ChangeOrder => write!(f, "CHANGE_ORDER"),
            Self::ChangeTask => write!(f, "CHANGE_TASK"),
            Self::VariableStudio => write!(f, "VARIABLE_STUDIO"),
            Self::DrawingAnnotations => write!(f, "DRAWING_ANNOTATIONS"),
            Self::Folder => write!(f, "FOLDER"),
        }
    }
}

impl Default for BtMetadataObjectType {
    fn default() -> BtMetadataObjectType {
        Self::Global
    }
}

