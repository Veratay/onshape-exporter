/*
 * Onshape REST API
 *
 * ## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn't used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.
 *
 * The version of the OpenAPI document: 1.198.56658-8969b956ea73
 * Contact: api-support@onshape.zendesk.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// BtMassPropertiesInfo : Mass properties information.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct BtMassPropertiesInfo {
    /// Centroid, center of gravity, center of mass
    #[serde(rename = "centroid", skip_serializing_if = "Option::is_none")]
    pub centroid: Option<Vec<f64>>,
    /// `true` if the part has mass.
    #[serde(rename = "hasMass", skip_serializing_if = "Option::is_none")]
    pub has_mass: Option<bool>,
    /// Mass moments of inertia
    #[serde(rename = "inertia", skip_serializing_if = "Option::is_none")]
    pub inertia: Option<Vec<f64>>,
    /// Mass
    #[serde(rename = "mass", skip_serializing_if = "Option::is_none")]
    pub mass: Option<Vec<f64>>,
    /// Number of parts without mass.
    #[serde(rename = "massMissingCount", skip_serializing_if = "Option::is_none")]
    pub mass_missing_count: Option<i32>,
    /// Surface area
    #[serde(rename = "periphery", skip_serializing_if = "Option::is_none")]
    pub periphery: Option<Vec<f64>>,
    /// Vector coordinates of the principal axes. Use `BTVector3d-389` as the `btType`.
    #[serde(rename = "principalAxes", skip_serializing_if = "Option::is_none")]
    pub principal_axes: Option<Vec<models::BtVector3d389>>,
    /// Principal moments of inertia
    #[serde(rename = "principalInertia", skip_serializing_if = "Option::is_none")]
    pub principal_inertia: Option<Vec<f64>>,
    /// Volume
    #[serde(rename = "volume", skip_serializing_if = "Option::is_none")]
    pub volume: Option<Vec<f64>>,
}

impl BtMassPropertiesInfo {
    /// Mass properties information.
    pub fn new() -> BtMassPropertiesInfo {
        BtMassPropertiesInfo {
            centroid: None,
            has_mass: None,
            inertia: None,
            mass: None,
            mass_missing_count: None,
            periphery: None,
            principal_axes: None,
            principal_inertia: None,
            volume: None,
        }
    }
}

