/*
 * Onshape REST API
 *
 * ## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn't used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.
 *
 * The version of the OpenAPI document: 1.198.56658-8969b956ea73
 * Contact: api-support@onshape.zendesk.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct BtReleasePackageItemInfo {
    #[serde(rename = "addedAutomatically", skip_serializing_if = "Option::is_none")]
    pub added_automatically: Option<bool>,
    #[serde(rename = "canExport", skip_serializing_if = "Option::is_none")]
    pub can_export: Option<bool>,
    #[serde(rename = "changeDetectionStatus", skip_serializing_if = "Option::is_none")]
    pub change_detection_status: Option<i32>,
    #[serde(rename = "companyId", skip_serializing_if = "Option::is_none")]
    pub company_id: Option<String>,
    #[serde(rename = "configuration", skip_serializing_if = "Option::is_none")]
    pub configuration: Option<String>,
    #[serde(rename = "configurationKey", skip_serializing_if = "Option::is_none")]
    pub configuration_key: Option<String>,
    #[serde(rename = "diffThumbnailConfigurationKey", skip_serializing_if = "Option::is_none")]
    pub diff_thumbnail_configuration_key: Option<String>,
    #[serde(rename = "documentId", skip_serializing_if = "Option::is_none")]
    pub document_id: Option<String>,
    #[serde(rename = "elementId", skip_serializing_if = "Option::is_none")]
    pub element_id: Option<String>,
    #[serde(rename = "elementType", skip_serializing_if = "Option::is_none")]
    pub element_type: Option<i32>,
    #[serde(rename = "errors", skip_serializing_if = "Option::is_none")]
    pub errors: Option<Vec<models::BtReleaseItemErrorInfo>>,
    #[serde(rename = "flatPartId", skip_serializing_if = "Option::is_none")]
    pub flat_part_id: Option<String>,
    /// URI to fetch complete information of the resource.
    #[serde(rename = "href", skip_serializing_if = "Option::is_none")]
    pub href: Option<String>,
    /// Id of the resource.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "isRevisionManaged", skip_serializing_if = "Option::is_none")]
    pub is_revision_managed: Option<bool>,
    #[serde(rename = "isRootItem", skip_serializing_if = "Option::is_none")]
    pub is_root_item: Option<bool>,
    #[serde(rename = "isTranslatable", skip_serializing_if = "Option::is_none")]
    pub is_translatable: Option<bool>,
    #[serde(rename = "manuallyRemovedChildrenIds", skip_serializing_if = "Option::is_none")]
    pub manually_removed_children_ids: Option<Vec<String>>,
    #[serde(rename = "meshState", skip_serializing_if = "Option::is_none")]
    pub mesh_state: Option<i32>,
    #[serde(rename = "mimeType", skip_serializing_if = "Option::is_none")]
    pub mime_type: Option<String>,
    /// Name of the resource.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "obsoletionRevisionId", skip_serializing_if = "Option::is_none")]
    pub obsoletion_revision_id: Option<String>,
    #[serde(rename = "originalWorkspaceId", skip_serializing_if = "Option::is_none")]
    pub original_workspace_id: Option<String>,
    #[serde(rename = "parentId", skip_serializing_if = "Option::is_none")]
    pub parent_id: Option<String>,
    #[serde(rename = "partId", skip_serializing_if = "Option::is_none")]
    pub part_id: Option<String>,
    #[serde(rename = "partIdentity", skip_serializing_if = "Option::is_none")]
    pub part_identity: Option<String>,
    #[serde(rename = "partType", skip_serializing_if = "Option::is_none")]
    pub part_type: Option<String>,
    #[serde(rename = "properties", skip_serializing_if = "Option::is_none")]
    pub properties: Option<Vec<models::BtMetadataPropertyInfo>>,
    #[serde(rename = "referenceIds", skip_serializing_if = "Option::is_none")]
    pub reference_ids: Option<Vec<String>>,
    #[serde(rename = "referenceIdsFromOriginalWorkspace", skip_serializing_if = "Option::is_none")]
    pub reference_ids_from_original_workspace: Option<Vec<String>>,
    #[serde(rename = "rpid", skip_serializing_if = "Option::is_none")]
    pub rpid: Option<String>,
    #[serde(rename = "smallThumbnailHref", skip_serializing_if = "Option::is_none")]
    pub small_thumbnail_href: Option<String>,
    #[serde(rename = "syncedWithPLM", skip_serializing_if = "Option::is_none")]
    pub synced_with_plm: Option<bool>,
    #[serde(rename = "versionId", skip_serializing_if = "Option::is_none")]
    pub version_id: Option<String>,
    /// URI to visualize the resource in a webclient if applicable.
    #[serde(rename = "viewRef", skip_serializing_if = "Option::is_none")]
    pub view_ref: Option<String>,
    #[serde(rename = "workspaceId", skip_serializing_if = "Option::is_none")]
    pub workspace_id: Option<String>,
}

impl BtReleasePackageItemInfo {
    pub fn new() -> BtReleasePackageItemInfo {
        BtReleasePackageItemInfo {
            added_automatically: None,
            can_export: None,
            change_detection_status: None,
            company_id: None,
            configuration: None,
            configuration_key: None,
            diff_thumbnail_configuration_key: None,
            document_id: None,
            element_id: None,
            element_type: None,
            errors: None,
            flat_part_id: None,
            href: None,
            id: None,
            is_revision_managed: None,
            is_root_item: None,
            is_translatable: None,
            manually_removed_children_ids: None,
            mesh_state: None,
            mime_type: None,
            name: None,
            obsoletion_revision_id: None,
            original_workspace_id: None,
            parent_id: None,
            part_id: None,
            part_identity: None,
            part_type: None,
            properties: None,
            reference_ids: None,
            reference_ids_from_original_workspace: None,
            rpid: None,
            small_thumbnail_href: None,
            synced_with_plm: None,
            version_id: None,
            view_ref: None,
            workspace_id: None,
        }
    }
}

