/*
 * Onshape REST API
 *
 * ## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn't used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.
 *
 * The version of the OpenAPI document: 1.198.56658-8969b956ea73
 * Contact: api-support@onshape.zendesk.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct BtAssemblyFeatureListResponse1174 {
    /// Type of JSON object.
    #[serde(rename = "btType", skip_serializing_if = "Option::is_none")]
    pub bt_type: Option<String>,
    /// FeatureScript version used in the Part Studio. Do not modify.
    #[serde(rename = "libraryVersion", skip_serializing_if = "Option::is_none")]
    pub library_version: Option<i32>,
    /// On output, `true` indicates a microversion mismatch was encountered.
    #[serde(rename = "microversionSkew", skip_serializing_if = "Option::is_none")]
    pub microversion_skew: Option<bool>,
    /// If `true`, the call will refuse to make the addition if the current microversion for the document does not match the source microversion. If `false`, a best-effort attempt is made to re-interpret the feature addition in the context of a newer document microversion.
    #[serde(rename = "rejectMicroversionSkew", skip_serializing_if = "Option::is_none")]
    pub reject_microversion_skew: Option<bool>,
    /// Version of the structure serialization rules used to encode the output. This enables incompatibility detection during software updates.
    #[serde(rename = "serializationVersion", skip_serializing_if = "Option::is_none")]
    pub serialization_version: Option<String>,
    /// The state from which the result was extracted. Geometry ID interpretation is dependent on this document microversion.
    #[serde(rename = "sourceMicroversion", skip_serializing_if = "Option::is_none")]
    pub source_microversion: Option<String>,
    #[serde(rename = "featureStates", skip_serializing_if = "Option::is_none")]
    pub feature_states: Option<std::collections::HashMap<String, models::BtFeatureState1688>>,
    #[serde(rename = "features", skip_serializing_if = "Option::is_none")]
    pub features: Option<Vec<models::BtmAssemblyFeature887>>,
    #[serde(rename = "isComplete", skip_serializing_if = "Option::is_none")]
    pub is_complete: Option<bool>,
}

impl BtAssemblyFeatureListResponse1174 {
    pub fn new() -> BtAssemblyFeatureListResponse1174 {
        BtAssemblyFeatureListResponse1174 {
            bt_type: None,
            library_version: None,
            microversion_skew: None,
            reject_microversion_skew: None,
            serialization_version: None,
            source_microversion: None,
            feature_states: None,
            features: None,
            is_complete: None,
        }
    }
}

