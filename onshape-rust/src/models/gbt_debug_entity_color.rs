/*
 * Onshape REST API
 *
 * ## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn't used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.
 *
 * The version of the OpenAPI document: 1.198.56658-8969b956ea73
 * Contact: api-support@onshape.zendesk.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum GbtDebugEntityColor {
    #[serde(rename = "RED")]
    Red,
    #[serde(rename = "GREEN")]
    Green,
    #[serde(rename = "BLUE")]
    Blue,
    #[serde(rename = "CYAN")]
    Cyan,
    #[serde(rename = "YELLOW")]
    Yellow,
    #[serde(rename = "MAGENTA")]
    Magenta,
    #[serde(rename = "BLACK")]
    Black,
    #[serde(rename = "TRANSLUCENT_PURPLE")]
    TranslucentPurple,
    #[serde(rename = "FEATURE_ERROR")]
    FeatureError,
    #[serde(rename = "FEATURE_DEBUG")]
    FeatureDebug,
    #[serde(rename = "TRANSLUCENT_GREEN")]
    TranslucentGreen,
    #[serde(rename = "TRANSLUCENT_BLUE")]
    TranslucentBlue,
    #[serde(rename = "TRANSLUCENT_CYAN")]
    TranslucentCyan,
    #[serde(rename = "TRANSLUCENT_YELLOW")]
    TranslucentYellow,
    #[serde(rename = "TRANSLUCENT_BLACK")]
    TranslucentBlack,
    #[serde(rename = "TRANSLUCENT_ORANGE")]
    TranslucentOrange,
    #[serde(rename = "TRANSLUCENT_RED")]
    TranslucentRed,
    #[serde(rename = "TRANSLUCENT_MAGENTA")]
    TranslucentMagenta,
    #[serde(rename = "ORANGE")]
    Orange,
    #[serde(rename = "UNKNOWN")]
    Unknown,

}

impl std::fmt::Display for GbtDebugEntityColor {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Red => write!(f, "RED"),
            Self::Green => write!(f, "GREEN"),
            Self::Blue => write!(f, "BLUE"),
            Self::Cyan => write!(f, "CYAN"),
            Self::Yellow => write!(f, "YELLOW"),
            Self::Magenta => write!(f, "MAGENTA"),
            Self::Black => write!(f, "BLACK"),
            Self::TranslucentPurple => write!(f, "TRANSLUCENT_PURPLE"),
            Self::FeatureError => write!(f, "FEATURE_ERROR"),
            Self::FeatureDebug => write!(f, "FEATURE_DEBUG"),
            Self::TranslucentGreen => write!(f, "TRANSLUCENT_GREEN"),
            Self::TranslucentBlue => write!(f, "TRANSLUCENT_BLUE"),
            Self::TranslucentCyan => write!(f, "TRANSLUCENT_CYAN"),
            Self::TranslucentYellow => write!(f, "TRANSLUCENT_YELLOW"),
            Self::TranslucentBlack => write!(f, "TRANSLUCENT_BLACK"),
            Self::TranslucentOrange => write!(f, "TRANSLUCENT_ORANGE"),
            Self::TranslucentRed => write!(f, "TRANSLUCENT_RED"),
            Self::TranslucentMagenta => write!(f, "TRANSLUCENT_MAGENTA"),
            Self::Orange => write!(f, "ORANGE"),
            Self::Unknown => write!(f, "UNKNOWN"),
        }
    }
}

impl Default for GbtDebugEntityColor {
    fn default() -> GbtDebugEntityColor {
        Self::Red
    }
}

