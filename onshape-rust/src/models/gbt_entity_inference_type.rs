/*
 * Onshape REST API
 *
 * ## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn't used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.
 *
 * The version of the OpenAPI document: 1.198.56658-8969b956ea73
 * Contact: api-support@onshape.zendesk.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum GbtEntityInferenceType {
    #[serde(rename = "PART_ORIGIN")]
    PartOrigin,
    #[serde(rename = "POINT")]
    Point,
    #[serde(rename = "CENTROID")]
    Centroid,
    #[serde(rename = "CENTER")]
    Center,
    #[serde(rename = "MID_POINT")]
    MidPoint,
    #[serde(rename = "TOP_AXIS_POINT")]
    TopAxisPoint,
    #[serde(rename = "MID_AXIS_POINT")]
    MidAxisPoint,
    #[serde(rename = "BOTTOM_AXIS_POINT")]
    BottomAxisPoint,
    #[serde(rename = "ORIGIN_X")]
    OriginX,
    #[serde(rename = "ORIGIN_Y")]
    OriginY,
    #[serde(rename = "ORIGIN_Z")]
    OriginZ,
    #[serde(rename = "LOOP_CENTER")]
    LoopCenter,
    #[serde(rename = "VIRTUAL_SHARP")]
    VirtualSharp,
    #[serde(rename = "UNKNOWN")]
    Unknown,

}

impl std::fmt::Display for GbtEntityInferenceType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::PartOrigin => write!(f, "PART_ORIGIN"),
            Self::Point => write!(f, "POINT"),
            Self::Centroid => write!(f, "CENTROID"),
            Self::Center => write!(f, "CENTER"),
            Self::MidPoint => write!(f, "MID_POINT"),
            Self::TopAxisPoint => write!(f, "TOP_AXIS_POINT"),
            Self::MidAxisPoint => write!(f, "MID_AXIS_POINT"),
            Self::BottomAxisPoint => write!(f, "BOTTOM_AXIS_POINT"),
            Self::OriginX => write!(f, "ORIGIN_X"),
            Self::OriginY => write!(f, "ORIGIN_Y"),
            Self::OriginZ => write!(f, "ORIGIN_Z"),
            Self::LoopCenter => write!(f, "LOOP_CENTER"),
            Self::VirtualSharp => write!(f, "VIRTUAL_SHARP"),
            Self::Unknown => write!(f, "UNKNOWN"),
        }
    }
}

impl Default for GbtEntityInferenceType {
    fn default() -> GbtEntityInferenceType {
        Self::PartOrigin
    }
}

