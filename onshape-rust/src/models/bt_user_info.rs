/*
 * Onshape REST API
 *
 * ## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn't used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.
 *
 * The version of the OpenAPI document: 1.198.56658-8969b956ea73
 * Contact: api-support@onshape.zendesk.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
#[serde(tag = "jsonType")]
pub enum BtUserInfo {
    #[serde(rename="BTUserAdminInfo")]
    BtUserAdminInfo {
        /// URI to fetch complete information of the resource.
        #[serde(rename = "href", skip_serializing_if = "Option::is_none")]
        href: Option<String>,
        /// Id of the resource.
        #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
        id: Option<String>,
        /// Name of the resource.
        #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
        name: Option<String>,
        /// URI to visualize the resource in a webclient if applicable.
        #[serde(rename = "viewRef", skip_serializing_if = "Option::is_none")]
        view_ref: Option<String>,
        #[serde(rename = "image", skip_serializing_if = "Option::is_none")]
        image: Option<String>,
        #[serde(rename = "isOnshapeSupport", skip_serializing_if = "Option::is_none")]
        is_onshape_support: Option<bool>,
        #[serde(rename = "state", skip_serializing_if = "Option::is_none")]
        state: Option<i32>,
        #[serde(rename = "documentationName", skip_serializing_if = "Option::is_none")]
        documentation_name: Option<String>,
        #[serde(rename = "email", skip_serializing_if = "Option::is_none")]
        email: Option<String>,
        #[serde(rename = "firstName", skip_serializing_if = "Option::is_none")]
        first_name: Option<String>,
        #[serde(rename = "lastName", skip_serializing_if = "Option::is_none")]
        last_name: Option<String>,
        #[serde(rename = "company", skip_serializing_if = "Option::is_none")]
        company: Option<Box<models::BtCompanySummaryInfo>>,
        #[serde(rename = "documentationNameOverride", skip_serializing_if = "Option::is_none")]
        documentation_name_override: Option<String>,
        #[serde(rename = "globalPermissions", skip_serializing_if = "Option::is_none")]
        global_permissions: Option<Box<models::GlobalPermissionInfo>>,
        #[serde(rename = "invitationState", skip_serializing_if = "Option::is_none")]
        invitation_state: Option<i32>,
        #[serde(rename = "isGuest", skip_serializing_if = "Option::is_none")]
        is_guest: Option<bool>,
        #[serde(rename = "isLight", skip_serializing_if = "Option::is_none")]
        is_light: Option<bool>,
        #[serde(rename = "lastLoginTime", skip_serializing_if = "Option::is_none")]
        last_login_time: Option<String>,
        #[serde(rename = "personalMessageAllowed", skip_serializing_if = "Option::is_none")]
        personal_message_allowed: Option<bool>,
        #[serde(rename = "source", skip_serializing_if = "Option::is_none")]
        source: Option<i32>,
        #[serde(rename = "activePlan", skip_serializing_if = "Option::is_none")]
        active_plan: Option<Box<models::BtBillingPlanInfo>>,
        #[serde(rename = "activePlanId", skip_serializing_if = "Option::is_none")]
        active_plan_id: Option<String>,
        #[serde(rename = "activePurchases", skip_serializing_if = "Option::is_none")]
        active_purchases: Option<Vec<models::BtPurchaseInfo>>,
        #[serde(rename = "activeTrialInfo", skip_serializing_if = "Option::is_none")]
        active_trial_info: Option<Box<models::BtTrialInfo>>,
        #[serde(rename = "b2cId", skip_serializing_if = "Option::is_none")]
        b2c_id: Option<String>,
        #[serde(rename = "billingUpdateRequired", skip_serializing_if = "Option::is_none")]
        billing_update_required: Option<bool>,
        #[serde(rename = "cadSystemAtSignup", skip_serializing_if = "Option::is_none")]
        cad_system_at_signup: Option<String>,
        #[serde(rename = "countryCode", skip_serializing_if = "Option::is_none")]
        country_code: Option<String>,
        #[serde(rename = "createdAt", skip_serializing_if = "Option::is_none")]
        created_at: Option<String>,
        #[serde(rename = "credential", skip_serializing_if = "Option::is_none")]
        credential: Option<Box<models::BtSessionCredentialInfo>>,
        #[serde(rename = "defaultCompanyName", skip_serializing_if = "Option::is_none")]
        default_company_name: Option<String>,
        #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
        description: Option<String>,
        #[serde(rename = "deviceInfo", skip_serializing_if = "Option::is_none")]
        device_info: Option<Box<models::BtDeviceLoginSecretInfo>>,
        #[serde(rename = "discounts", skip_serializing_if = "Option::is_none")]
        discounts: Option<Vec<models::BtDiscountInfo>>,
        #[serde(rename = "enterprise", skip_serializing_if = "Option::is_none")]
        enterprise: Option<bool>,
        #[serde(rename = "eulaId", skip_serializing_if = "Option::is_none")]
        eula_id: Option<String>,
        #[serde(rename = "eulaRequired", skip_serializing_if = "Option::is_none")]
        eula_required: Option<bool>,
        #[serde(rename = "evalCenter", skip_serializing_if = "Option::is_none")]
        eval_center: Option<bool>,
        #[serde(rename = "forumId", skip_serializing_if = "Option::is_none")]
        forum_id: Option<String>,
        #[serde(rename = "intendedUse", skip_serializing_if = "Option::is_none")]
        intended_use: Option<i32>,
        #[serde(rename = "lastTrialInfo", skip_serializing_if = "Option::is_none")]
        last_trial_info: Option<Box<models::BtTrialInfo>>,
        #[serde(rename = "needToResetClientCacheTime", skip_serializing_if = "Option::is_none")]
        need_to_reset_client_cache_time: Option<String>,
        #[serde(rename = "needToShowNewWalkthrough", skip_serializing_if = "Option::is_none")]
        need_to_show_new_walkthrough: Option<bool>,
        #[serde(rename = "ownPurchase", skip_serializing_if = "Option::is_none")]
        own_purchase: Option<Box<models::BtPurchaseInfo>>,
        #[serde(rename = "phoneNumber", skip_serializing_if = "Option::is_none")]
        phone_number: Option<String>,
        #[serde(rename = "proDiscoveryTrialRejected", skip_serializing_if = "Option::is_none")]
        pro_discovery_trial_rejected: Option<bool>,
        #[serde(rename = "productType", skip_serializing_if = "Option::is_none")]
        product_type: Option<Vec<String>>,
        #[serde(rename = "redirectUrl", skip_serializing_if = "Option::is_none")]
        redirect_url: Option<String>,
        #[serde(rename = "role", skip_serializing_if = "Option::is_none")]
        role: Option<i32>,
        #[serde(rename = "roles", skip_serializing_if = "Option::is_none")]
        roles: Option<Vec<models::BtRole>>,
        #[serde(rename = "rumEnabled", skip_serializing_if = "Option::is_none")]
        rum_enabled: Option<bool>,
        #[serde(rename = "showRenewStudentPages", skip_serializing_if = "Option::is_none")]
        show_renew_student_pages: Option<bool>,
        #[serde(rename = "startupPage", skip_serializing_if = "Option::is_none")]
        startup_page: Option<i32>,
        #[serde(rename = "systemUser", skip_serializing_if = "Option::is_none")]
        system_user: Option<bool>,
        #[serde(rename = "totpEnabled", skip_serializing_if = "Option::is_none")]
        totp_enabled: Option<bool>,
        #[serde(rename = "tracingEnabled", skip_serializing_if = "Option::is_none")]
        tracing_enabled: Option<bool>,
        #[serde(rename = "trialInfos", skip_serializing_if = "Option::is_none")]
        trial_infos: Option<Vec<models::BtTrialInfo>>,
    },
    #[serde(rename="userinfo")]
    BtUserInfo {
        /// URI to fetch complete information of the resource.
        #[serde(rename = "href", skip_serializing_if = "Option::is_none")]
        href: Option<String>,
        /// Id of the resource.
        #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
        id: Option<String>,
        /// Name of the resource.
        #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
        name: Option<String>,
        /// URI to visualize the resource in a webclient if applicable.
        #[serde(rename = "viewRef", skip_serializing_if = "Option::is_none")]
        view_ref: Option<String>,
        #[serde(rename = "image", skip_serializing_if = "Option::is_none")]
        image: Option<String>,
        #[serde(rename = "isOnshapeSupport", skip_serializing_if = "Option::is_none")]
        is_onshape_support: Option<bool>,
        #[serde(rename = "state", skip_serializing_if = "Option::is_none")]
        state: Option<i32>,
        #[serde(rename = "documentationName", skip_serializing_if = "Option::is_none")]
        documentation_name: Option<String>,
        #[serde(rename = "email", skip_serializing_if = "Option::is_none")]
        email: Option<String>,
        #[serde(rename = "firstName", skip_serializing_if = "Option::is_none")]
        first_name: Option<String>,
        #[serde(rename = "lastName", skip_serializing_if = "Option::is_none")]
        last_name: Option<String>,
        #[serde(rename = "company", skip_serializing_if = "Option::is_none")]
        company: Option<Box<models::BtCompanySummaryInfo>>,
        #[serde(rename = "documentationNameOverride", skip_serializing_if = "Option::is_none")]
        documentation_name_override: Option<String>,
        #[serde(rename = "globalPermissions", skip_serializing_if = "Option::is_none")]
        global_permissions: Option<Box<models::GlobalPermissionInfo>>,
        #[serde(rename = "invitationState", skip_serializing_if = "Option::is_none")]
        invitation_state: Option<i32>,
        #[serde(rename = "isGuest", skip_serializing_if = "Option::is_none")]
        is_guest: Option<bool>,
        #[serde(rename = "isLight", skip_serializing_if = "Option::is_none")]
        is_light: Option<bool>,
        #[serde(rename = "lastLoginTime", skip_serializing_if = "Option::is_none")]
        last_login_time: Option<String>,
        #[serde(rename = "personalMessageAllowed", skip_serializing_if = "Option::is_none")]
        personal_message_allowed: Option<bool>,
        #[serde(rename = "source", skip_serializing_if = "Option::is_none")]
        source: Option<i32>,
        #[serde(rename = "activePlan", skip_serializing_if = "Option::is_none")]
        active_plan: Option<Box<models::BtBillingPlanInfo>>,
        #[serde(rename = "activePlanId", skip_serializing_if = "Option::is_none")]
        active_plan_id: Option<String>,
        #[serde(rename = "activePurchases", skip_serializing_if = "Option::is_none")]
        active_purchases: Option<Vec<models::BtPurchaseInfo>>,
        #[serde(rename = "activeTrialInfo", skip_serializing_if = "Option::is_none")]
        active_trial_info: Option<Box<models::BtTrialInfo>>,
        #[serde(rename = "b2cId", skip_serializing_if = "Option::is_none")]
        b2c_id: Option<String>,
        #[serde(rename = "billingUpdateRequired", skip_serializing_if = "Option::is_none")]
        billing_update_required: Option<bool>,
        #[serde(rename = "cadSystemAtSignup", skip_serializing_if = "Option::is_none")]
        cad_system_at_signup: Option<String>,
        #[serde(rename = "countryCode", skip_serializing_if = "Option::is_none")]
        country_code: Option<String>,
        #[serde(rename = "createdAt", skip_serializing_if = "Option::is_none")]
        created_at: Option<String>,
        #[serde(rename = "credential", skip_serializing_if = "Option::is_none")]
        credential: Option<Box<models::BtSessionCredentialInfo>>,
        #[serde(rename = "defaultCompanyName", skip_serializing_if = "Option::is_none")]
        default_company_name: Option<String>,
        #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
        description: Option<String>,
        #[serde(rename = "deviceInfo", skip_serializing_if = "Option::is_none")]
        device_info: Option<Box<models::BtDeviceLoginSecretInfo>>,
        #[serde(rename = "discounts", skip_serializing_if = "Option::is_none")]
        discounts: Option<Vec<models::BtDiscountInfo>>,
        #[serde(rename = "enterprise", skip_serializing_if = "Option::is_none")]
        enterprise: Option<bool>,
        #[serde(rename = "eulaId", skip_serializing_if = "Option::is_none")]
        eula_id: Option<String>,
        #[serde(rename = "eulaRequired", skip_serializing_if = "Option::is_none")]
        eula_required: Option<bool>,
        #[serde(rename = "evalCenter", skip_serializing_if = "Option::is_none")]
        eval_center: Option<bool>,
        #[serde(rename = "forumId", skip_serializing_if = "Option::is_none")]
        forum_id: Option<String>,
        #[serde(rename = "intendedUse", skip_serializing_if = "Option::is_none")]
        intended_use: Option<i32>,
        #[serde(rename = "lastTrialInfo", skip_serializing_if = "Option::is_none")]
        last_trial_info: Option<Box<models::BtTrialInfo>>,
        #[serde(rename = "needToResetClientCacheTime", skip_serializing_if = "Option::is_none")]
        need_to_reset_client_cache_time: Option<String>,
        #[serde(rename = "needToShowNewWalkthrough", skip_serializing_if = "Option::is_none")]
        need_to_show_new_walkthrough: Option<bool>,
        #[serde(rename = "ownPurchase", skip_serializing_if = "Option::is_none")]
        own_purchase: Option<Box<models::BtPurchaseInfo>>,
        #[serde(rename = "phoneNumber", skip_serializing_if = "Option::is_none")]
        phone_number: Option<String>,
        #[serde(rename = "proDiscoveryTrialRejected", skip_serializing_if = "Option::is_none")]
        pro_discovery_trial_rejected: Option<bool>,
        #[serde(rename = "productType", skip_serializing_if = "Option::is_none")]
        product_type: Option<Vec<String>>,
        #[serde(rename = "redirectUrl", skip_serializing_if = "Option::is_none")]
        redirect_url: Option<String>,
        #[serde(rename = "role", skip_serializing_if = "Option::is_none")]
        role: Option<i32>,
        #[serde(rename = "roles", skip_serializing_if = "Option::is_none")]
        roles: Option<Vec<models::BtRole>>,
        #[serde(rename = "rumEnabled", skip_serializing_if = "Option::is_none")]
        rum_enabled: Option<bool>,
        #[serde(rename = "showRenewStudentPages", skip_serializing_if = "Option::is_none")]
        show_renew_student_pages: Option<bool>,
        #[serde(rename = "startupPage", skip_serializing_if = "Option::is_none")]
        startup_page: Option<i32>,
        #[serde(rename = "systemUser", skip_serializing_if = "Option::is_none")]
        system_user: Option<bool>,
        #[serde(rename = "totpEnabled", skip_serializing_if = "Option::is_none")]
        totp_enabled: Option<bool>,
        #[serde(rename = "tracingEnabled", skip_serializing_if = "Option::is_none")]
        tracing_enabled: Option<bool>,
        #[serde(rename = "trialInfos", skip_serializing_if = "Option::is_none")]
        trial_infos: Option<Vec<models::BtTrialInfo>>,
    },
}

impl Default for BtUserInfo {
    fn default() -> Self {
        Self::BtUserAdminInfo {
            href: Default::default(),
            id: Default::default(),
            name: Default::default(),
            view_ref: Default::default(),
            image: Default::default(),
            is_onshape_support: Default::default(),
            state: Default::default(),
            documentation_name: Default::default(),
            email: Default::default(),
            first_name: Default::default(),
            last_name: Default::default(),
            company: Default::default(),
            documentation_name_override: Default::default(),
            global_permissions: Default::default(),
            invitation_state: Default::default(),
            is_guest: Default::default(),
            is_light: Default::default(),
            last_login_time: Default::default(),
            personal_message_allowed: Default::default(),
            source: Default::default(),
            active_plan: Default::default(),
            active_plan_id: Default::default(),
            active_purchases: Default::default(),
            active_trial_info: Default::default(),
            b2c_id: Default::default(),
            billing_update_required: Default::default(),
            cad_system_at_signup: Default::default(),
            country_code: Default::default(),
            created_at: Default::default(),
            credential: Default::default(),
            default_company_name: Default::default(),
            description: Default::default(),
            device_info: Default::default(),
            discounts: Default::default(),
            enterprise: Default::default(),
            eula_id: Default::default(),
            eula_required: Default::default(),
            eval_center: Default::default(),
            forum_id: Default::default(),
            intended_use: Default::default(),
            last_trial_info: Default::default(),
            need_to_reset_client_cache_time: Default::default(),
            need_to_show_new_walkthrough: Default::default(),
            own_purchase: Default::default(),
            phone_number: Default::default(),
            pro_discovery_trial_rejected: Default::default(),
            product_type: Default::default(),
            redirect_url: Default::default(),
            role: Default::default(),
            roles: Default::default(),
            rum_enabled: Default::default(),
            show_renew_student_pages: Default::default(),
            startup_page: Default::default(),
            system_user: Default::default(),
            totp_enabled: Default::default(),
            tracing_enabled: Default::default(),
            trial_infos: Default::default(),
        }
        
    }
}


