/*
 * Onshape REST API
 *
 * ## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn't used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.
 *
 * The version of the OpenAPI document: 1.198.56658-8969b956ea73
 * Contact: api-support@onshape.zendesk.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
#[serde(tag = "btType")]
pub enum BtTable1825 {
    #[serde(rename="BTAssemblySimulationStructuralLoadsTable-3867")]
    BtAssemblySimulationStructuralLoadsTable3867 {
        #[serde(rename = "allRowValues", skip_serializing_if = "Option::is_none")]
        all_row_values: Option<Vec<Vec<String>>>,
        #[serde(rename = "columnCount", skip_serializing_if = "Option::is_none")]
        column_count: Option<i32>,
        #[serde(rename = "frozenColumns", skip_serializing_if = "Option::is_none")]
        frozen_columns: Option<i32>,
        #[serde(rename = "isFailed", skip_serializing_if = "Option::is_none")]
        is_failed: Option<bool>,
        #[serde(rename = "nodeId", skip_serializing_if = "Option::is_none")]
        node_id: Option<String>,
        #[serde(rename = "readOnly", skip_serializing_if = "Option::is_none")]
        read_only: Option<bool>,
        #[serde(rename = "rowCount", skip_serializing_if = "Option::is_none")]
        row_count: Option<i32>,
        #[serde(rename = "sortOrder", skip_serializing_if = "Option::is_none")]
        sort_order: Option<Box<models::BtTableSortOrder4371>>,
        #[serde(rename = "tableColumns", skip_serializing_if = "Option::is_none")]
        table_columns: Option<Vec<models::BtTableColumnInfo1222>>,
        #[serde(rename = "tableId", skip_serializing_if = "Option::is_none")]
        table_id: Option<String>,
        #[serde(rename = "tableRows", skip_serializing_if = "Option::is_none")]
        table_rows: Option<Vec<models::BtTableRow1054>>,
        #[serde(rename = "title", skip_serializing_if = "Option::is_none")]
        title: Option<String>,
    },
    #[serde(rename="BTAssemblySimulationTable-3236")]
    BtAssemblySimulationTable3236 {
        #[serde(rename = "allRowValues", skip_serializing_if = "Option::is_none")]
        all_row_values: Option<Vec<Vec<String>>>,
        #[serde(rename = "columnCount", skip_serializing_if = "Option::is_none")]
        column_count: Option<i32>,
        #[serde(rename = "frozenColumns", skip_serializing_if = "Option::is_none")]
        frozen_columns: Option<i32>,
        #[serde(rename = "isFailed", skip_serializing_if = "Option::is_none")]
        is_failed: Option<bool>,
        #[serde(rename = "nodeId", skip_serializing_if = "Option::is_none")]
        node_id: Option<String>,
        #[serde(rename = "readOnly", skip_serializing_if = "Option::is_none")]
        read_only: Option<bool>,
        #[serde(rename = "rowCount", skip_serializing_if = "Option::is_none")]
        row_count: Option<i32>,
        #[serde(rename = "sortOrder", skip_serializing_if = "Option::is_none")]
        sort_order: Option<Box<models::BtTableSortOrder4371>>,
        #[serde(rename = "tableColumns", skip_serializing_if = "Option::is_none")]
        table_columns: Option<Vec<models::BtTableColumnInfo1222>>,
        #[serde(rename = "tableId", skip_serializing_if = "Option::is_none")]
        table_id: Option<String>,
        #[serde(rename = "tableRows", skip_serializing_if = "Option::is_none")]
        table_rows: Option<Vec<models::BtTableRow1054>>,
        #[serde(rename = "title", skip_serializing_if = "Option::is_none")]
        title: Option<String>,
    },
    #[serde(rename="BTBillOfMaterialsTable-1073")]
    BtBillOfMaterialsTable1073 {
        #[serde(rename = "allRowValues", skip_serializing_if = "Option::is_none")]
        all_row_values: Option<Vec<Vec<String>>>,
        #[serde(rename = "columnCount", skip_serializing_if = "Option::is_none")]
        column_count: Option<i32>,
        #[serde(rename = "frozenColumns", skip_serializing_if = "Option::is_none")]
        frozen_columns: Option<i32>,
        #[serde(rename = "isFailed", skip_serializing_if = "Option::is_none")]
        is_failed: Option<bool>,
        #[serde(rename = "nodeId", skip_serializing_if = "Option::is_none")]
        node_id: Option<String>,
        #[serde(rename = "readOnly", skip_serializing_if = "Option::is_none")]
        read_only: Option<bool>,
        #[serde(rename = "rowCount", skip_serializing_if = "Option::is_none")]
        row_count: Option<i32>,
        #[serde(rename = "sortOrder", skip_serializing_if = "Option::is_none")]
        sort_order: Option<Box<models::BtTableSortOrder4371>>,
        #[serde(rename = "tableColumns", skip_serializing_if = "Option::is_none")]
        table_columns: Option<Vec<models::BtTableColumnInfo1222>>,
        #[serde(rename = "tableId", skip_serializing_if = "Option::is_none")]
        table_id: Option<String>,
        #[serde(rename = "tableRows", skip_serializing_if = "Option::is_none")]
        table_rows: Option<Vec<models::BtTableRow1054>>,
        #[serde(rename = "title", skip_serializing_if = "Option::is_none")]
        title: Option<String>,
    },
    #[serde(rename="BTConfiguredPartPropertiesTable-2740")]
    BtConfiguredPartPropertiesTable2740 {
        #[serde(rename = "allRowValues", skip_serializing_if = "Option::is_none")]
        all_row_values: Option<Vec<Vec<String>>>,
        #[serde(rename = "columnCount", skip_serializing_if = "Option::is_none")]
        column_count: Option<i32>,
        #[serde(rename = "frozenColumns", skip_serializing_if = "Option::is_none")]
        frozen_columns: Option<i32>,
        #[serde(rename = "isFailed", skip_serializing_if = "Option::is_none")]
        is_failed: Option<bool>,
        #[serde(rename = "nodeId", skip_serializing_if = "Option::is_none")]
        node_id: Option<String>,
        #[serde(rename = "readOnly", skip_serializing_if = "Option::is_none")]
        read_only: Option<bool>,
        #[serde(rename = "rowCount", skip_serializing_if = "Option::is_none")]
        row_count: Option<i32>,
        #[serde(rename = "sortOrder", skip_serializing_if = "Option::is_none")]
        sort_order: Option<Box<models::BtTableSortOrder4371>>,
        #[serde(rename = "tableColumns", skip_serializing_if = "Option::is_none")]
        table_columns: Option<Vec<models::BtTableColumnInfo1222>>,
        #[serde(rename = "tableId", skip_serializing_if = "Option::is_none")]
        table_id: Option<String>,
        #[serde(rename = "tableRows", skip_serializing_if = "Option::is_none")]
        table_rows: Option<Vec<models::BtTableRow1054>>,
        #[serde(rename = "title", skip_serializing_if = "Option::is_none")]
        title: Option<String>,
    },
    #[serde(rename="BTFSTable-953")]
    BtfsTable953 {
        #[serde(rename = "allRowValues", skip_serializing_if = "Option::is_none")]
        all_row_values: Option<Vec<Vec<String>>>,
        #[serde(rename = "columnCount", skip_serializing_if = "Option::is_none")]
        column_count: Option<i32>,
        #[serde(rename = "frozenColumns", skip_serializing_if = "Option::is_none")]
        frozen_columns: Option<i32>,
        #[serde(rename = "isFailed", skip_serializing_if = "Option::is_none")]
        is_failed: Option<bool>,
        #[serde(rename = "nodeId", skip_serializing_if = "Option::is_none")]
        node_id: Option<String>,
        #[serde(rename = "readOnly", skip_serializing_if = "Option::is_none")]
        read_only: Option<bool>,
        #[serde(rename = "rowCount", skip_serializing_if = "Option::is_none")]
        row_count: Option<i32>,
        #[serde(rename = "sortOrder", skip_serializing_if = "Option::is_none")]
        sort_order: Option<Box<models::BtTableSortOrder4371>>,
        #[serde(rename = "tableColumns", skip_serializing_if = "Option::is_none")]
        table_columns: Option<Vec<models::BtTableColumnInfo1222>>,
        #[serde(rename = "tableId", skip_serializing_if = "Option::is_none")]
        table_id: Option<String>,
        #[serde(rename = "tableRows", skip_serializing_if = "Option::is_none")]
        table_rows: Option<Vec<models::BtTableRow1054>>,
        #[serde(rename = "title", skip_serializing_if = "Option::is_none")]
        title: Option<String>,
    },
}

impl Default for BtTable1825 {
    fn default() -> Self {
        Self::BtAssemblySimulationStructuralLoadsTable3867 {
            all_row_values: Default::default(),
            column_count: Default::default(),
            frozen_columns: Default::default(),
            is_failed: Default::default(),
            node_id: Default::default(),
            read_only: Default::default(),
            row_count: Default::default(),
            sort_order: Default::default(),
            table_columns: Default::default(),
            table_id: Default::default(),
            table_rows: Default::default(),
            title: Default::default(),
        }
        
    }
}


