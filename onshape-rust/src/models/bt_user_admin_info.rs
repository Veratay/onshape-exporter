/*
 * Onshape REST API
 *
 * ## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn't used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.
 *
 * The version of the OpenAPI document: 1.198.56658-8969b956ea73
 * Contact: api-support@onshape.zendesk.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct BtUserAdminInfo {
    #[serde(rename = "jsonType")]
    pub json_type: String,
    /// URI to fetch complete information of the resource.
    #[serde(rename = "href", skip_serializing_if = "Option::is_none")]
    pub href: Option<String>,
    /// Id of the resource.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// Name of the resource.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// URI to visualize the resource in a webclient if applicable.
    #[serde(rename = "viewRef", skip_serializing_if = "Option::is_none")]
    pub view_ref: Option<String>,
    #[serde(rename = "image", skip_serializing_if = "Option::is_none")]
    pub image: Option<String>,
    #[serde(rename = "isOnshapeSupport", skip_serializing_if = "Option::is_none")]
    pub is_onshape_support: Option<bool>,
    #[serde(rename = "state", skip_serializing_if = "Option::is_none")]
    pub state: Option<i32>,
    #[serde(rename = "documentationName", skip_serializing_if = "Option::is_none")]
    pub documentation_name: Option<String>,
    #[serde(rename = "email", skip_serializing_if = "Option::is_none")]
    pub email: Option<String>,
    #[serde(rename = "firstName", skip_serializing_if = "Option::is_none")]
    pub first_name: Option<String>,
    #[serde(rename = "lastName", skip_serializing_if = "Option::is_none")]
    pub last_name: Option<String>,
    #[serde(rename = "company", skip_serializing_if = "Option::is_none")]
    pub company: Option<Box<models::BtCompanySummaryInfo>>,
    #[serde(rename = "documentationNameOverride", skip_serializing_if = "Option::is_none")]
    pub documentation_name_override: Option<String>,
    #[serde(rename = "globalPermissions", skip_serializing_if = "Option::is_none")]
    pub global_permissions: Option<Box<models::GlobalPermissionInfo>>,
    #[serde(rename = "invitationState", skip_serializing_if = "Option::is_none")]
    pub invitation_state: Option<i32>,
    #[serde(rename = "isGuest", skip_serializing_if = "Option::is_none")]
    pub is_guest: Option<bool>,
    #[serde(rename = "isLight", skip_serializing_if = "Option::is_none")]
    pub is_light: Option<bool>,
    #[serde(rename = "lastLoginTime", skip_serializing_if = "Option::is_none")]
    pub last_login_time: Option<String>,
    #[serde(rename = "personalMessageAllowed", skip_serializing_if = "Option::is_none")]
    pub personal_message_allowed: Option<bool>,
    #[serde(rename = "source", skip_serializing_if = "Option::is_none")]
    pub source: Option<i32>,
    #[serde(rename = "activePlan", skip_serializing_if = "Option::is_none")]
    pub active_plan: Option<Box<models::BtBillingPlanInfo>>,
    #[serde(rename = "activePlanId", skip_serializing_if = "Option::is_none")]
    pub active_plan_id: Option<String>,
    #[serde(rename = "activePurchases", skip_serializing_if = "Option::is_none")]
    pub active_purchases: Option<Vec<models::BtPurchaseInfo>>,
    #[serde(rename = "activeTrialInfo", skip_serializing_if = "Option::is_none")]
    pub active_trial_info: Option<Box<models::BtTrialInfo>>,
    #[serde(rename = "b2cId", skip_serializing_if = "Option::is_none")]
    pub b2c_id: Option<String>,
    #[serde(rename = "billingUpdateRequired", skip_serializing_if = "Option::is_none")]
    pub billing_update_required: Option<bool>,
    #[serde(rename = "cadSystemAtSignup", skip_serializing_if = "Option::is_none")]
    pub cad_system_at_signup: Option<String>,
    #[serde(rename = "countryCode", skip_serializing_if = "Option::is_none")]
    pub country_code: Option<String>,
    #[serde(rename = "createdAt", skip_serializing_if = "Option::is_none")]
    pub created_at: Option<String>,
    #[serde(rename = "credential", skip_serializing_if = "Option::is_none")]
    pub credential: Option<Box<models::BtSessionCredentialInfo>>,
    #[serde(rename = "defaultCompanyName", skip_serializing_if = "Option::is_none")]
    pub default_company_name: Option<String>,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "deviceInfo", skip_serializing_if = "Option::is_none")]
    pub device_info: Option<Box<models::BtDeviceLoginSecretInfo>>,
    #[serde(rename = "discounts", skip_serializing_if = "Option::is_none")]
    pub discounts: Option<Vec<models::BtDiscountInfo>>,
    #[serde(rename = "enterprise", skip_serializing_if = "Option::is_none")]
    pub enterprise: Option<bool>,
    #[serde(rename = "eulaId", skip_serializing_if = "Option::is_none")]
    pub eula_id: Option<String>,
    #[serde(rename = "eulaRequired", skip_serializing_if = "Option::is_none")]
    pub eula_required: Option<bool>,
    #[serde(rename = "evalCenter", skip_serializing_if = "Option::is_none")]
    pub eval_center: Option<bool>,
    #[serde(rename = "forumId", skip_serializing_if = "Option::is_none")]
    pub forum_id: Option<String>,
    #[serde(rename = "intendedUse", skip_serializing_if = "Option::is_none")]
    pub intended_use: Option<i32>,
    #[serde(rename = "lastTrialInfo", skip_serializing_if = "Option::is_none")]
    pub last_trial_info: Option<Box<models::BtTrialInfo>>,
    #[serde(rename = "needToResetClientCacheTime", skip_serializing_if = "Option::is_none")]
    pub need_to_reset_client_cache_time: Option<String>,
    #[serde(rename = "needToShowNewWalkthrough", skip_serializing_if = "Option::is_none")]
    pub need_to_show_new_walkthrough: Option<bool>,
    #[serde(rename = "ownPurchase", skip_serializing_if = "Option::is_none")]
    pub own_purchase: Option<Box<models::BtPurchaseInfo>>,
    #[serde(rename = "phoneNumber", skip_serializing_if = "Option::is_none")]
    pub phone_number: Option<String>,
    #[serde(rename = "proDiscoveryTrialRejected", skip_serializing_if = "Option::is_none")]
    pub pro_discovery_trial_rejected: Option<bool>,
    #[serde(rename = "productType", skip_serializing_if = "Option::is_none")]
    pub product_type: Option<Vec<String>>,
    #[serde(rename = "redirectUrl", skip_serializing_if = "Option::is_none")]
    pub redirect_url: Option<String>,
    #[serde(rename = "role", skip_serializing_if = "Option::is_none")]
    pub role: Option<i32>,
    #[serde(rename = "roles", skip_serializing_if = "Option::is_none")]
    pub roles: Option<Vec<models::BtRole>>,
    #[serde(rename = "rumEnabled", skip_serializing_if = "Option::is_none")]
    pub rum_enabled: Option<bool>,
    #[serde(rename = "showRenewStudentPages", skip_serializing_if = "Option::is_none")]
    pub show_renew_student_pages: Option<bool>,
    #[serde(rename = "startupPage", skip_serializing_if = "Option::is_none")]
    pub startup_page: Option<i32>,
    #[serde(rename = "systemUser", skip_serializing_if = "Option::is_none")]
    pub system_user: Option<bool>,
    #[serde(rename = "totpEnabled", skip_serializing_if = "Option::is_none")]
    pub totp_enabled: Option<bool>,
    #[serde(rename = "tracingEnabled", skip_serializing_if = "Option::is_none")]
    pub tracing_enabled: Option<bool>,
    #[serde(rename = "trialInfos", skip_serializing_if = "Option::is_none")]
    pub trial_infos: Option<Vec<models::BtTrialInfo>>,
    #[serde(rename = "discount", skip_serializing_if = "Option::is_none")]
    pub discount: Option<Box<models::BtDiscount>>,
    #[serde(rename = "invitationId", skip_serializing_if = "Option::is_none")]
    pub invitation_id: Option<String>,
    #[serde(rename = "invitedByEmail", skip_serializing_if = "Option::is_none")]
    pub invited_by_email: Option<String>,
    #[serde(rename = "invitedDocumentId", skip_serializing_if = "Option::is_none")]
    pub invited_document_id: Option<String>,
    #[serde(rename = "isTrialRequest", skip_serializing_if = "Option::is_none")]
    pub is_trial_request: Option<bool>,
    #[serde(rename = "privacyConsents", skip_serializing_if = "Option::is_none")]
    pub privacy_consents: Option<Vec<models::BtPrivacyConsentInfo>>,
    #[serde(rename = "userMetrics", skip_serializing_if = "Option::is_none")]
    pub user_metrics: Option<Box<models::BtUserMetricsInfo>>,
}

impl BtUserAdminInfo {
    pub fn new(json_type: String) -> BtUserAdminInfo {
        BtUserAdminInfo {
            json_type,
            href: None,
            id: None,
            name: None,
            view_ref: None,
            image: None,
            is_onshape_support: None,
            state: None,
            documentation_name: None,
            email: None,
            first_name: None,
            last_name: None,
            company: None,
            documentation_name_override: None,
            global_permissions: None,
            invitation_state: None,
            is_guest: None,
            is_light: None,
            last_login_time: None,
            personal_message_allowed: None,
            source: None,
            active_plan: None,
            active_plan_id: None,
            active_purchases: None,
            active_trial_info: None,
            b2c_id: None,
            billing_update_required: None,
            cad_system_at_signup: None,
            country_code: None,
            created_at: None,
            credential: None,
            default_company_name: None,
            description: None,
            device_info: None,
            discounts: None,
            enterprise: None,
            eula_id: None,
            eula_required: None,
            eval_center: None,
            forum_id: None,
            intended_use: None,
            last_trial_info: None,
            need_to_reset_client_cache_time: None,
            need_to_show_new_walkthrough: None,
            own_purchase: None,
            phone_number: None,
            pro_discovery_trial_rejected: None,
            product_type: None,
            redirect_url: None,
            role: None,
            roles: None,
            rum_enabled: None,
            show_renew_student_pages: None,
            startup_page: None,
            system_user: None,
            totp_enabled: None,
            tracing_enabled: None,
            trial_infos: None,
            discount: None,
            invitation_id: None,
            invited_by_email: None,
            invited_document_id: None,
            is_trial_request: None,
            privacy_consents: None,
            user_metrics: None,
        }
    }
}

