/*
 * Onshape REST API
 *
 * ## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn't used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.
 *
 * The version of the OpenAPI document: 1.198.56658-8969b956ea73
 * Contact: api-support@onshape.zendesk.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct BlobItem {
    #[serde(rename = "applicationTarget", skip_serializing_if = "Option::is_none")]
    pub application_target: Option<Box<models::BtApplicationTargetInfo>>,
    #[serde(rename = "dataType", skip_serializing_if = "Option::is_none")]
    pub data_type: Option<String>,
    #[serde(rename = "documentId", skip_serializing_if = "Option::is_none")]
    pub document_id: Option<String>,
    #[serde(rename = "elementId", skip_serializing_if = "Option::is_none")]
    pub element_id: Option<String>,
    #[serde(rename = "elementType", skip_serializing_if = "Option::is_none")]
    pub element_type: Option<models::GbtElementType>,
    #[serde(rename = "encodedConfiguration", skip_serializing_if = "Option::is_none")]
    pub encoded_configuration: Option<String>,
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "jsonType")]
    pub json_type: String,
    #[serde(rename = "partId", skip_serializing_if = "Option::is_none")]
    pub part_id: Option<String>,
    #[serde(rename = "partName", skip_serializing_if = "Option::is_none")]
    pub part_name: Option<String>,
    #[serde(rename = "partNumber", skip_serializing_if = "Option::is_none")]
    pub part_number: Option<String>,
    #[serde(rename = "revision", skip_serializing_if = "Option::is_none")]
    pub revision: Option<String>,
    #[serde(rename = "revisionId", skip_serializing_if = "Option::is_none")]
    pub revision_id: Option<String>,
    #[serde(rename = "state", skip_serializing_if = "Option::is_none")]
    pub state: Option<i32>,
    #[serde(rename = "versionId", skip_serializing_if = "Option::is_none")]
    pub version_id: Option<String>,
    #[serde(rename = "versionName", skip_serializing_if = "Option::is_none")]
    pub version_name: Option<String>,
    #[serde(rename = "dataTypeForResponse", skip_serializing_if = "Option::is_none")]
    pub data_type_for_response: Option<String>,
    #[serde(rename = "filename", skip_serializing_if = "Option::is_none")]
    pub filename: Option<String>,
    #[serde(rename = "foreignDataId", skip_serializing_if = "Option::is_none")]
    pub foreign_data_id: Option<String>,
    #[serde(rename = "href", skip_serializing_if = "Option::is_none")]
    pub href: Option<String>,
    #[serde(rename = "prettyType", skip_serializing_if = "Option::is_none")]
    pub pretty_type: Option<String>,
    #[serde(rename = "safeToShow", skip_serializing_if = "Option::is_none")]
    pub safe_to_show: Option<bool>,
    #[serde(rename = "specifiedUnit", skip_serializing_if = "Option::is_none")]
    pub specified_unit: Option<String>,
    #[serde(rename = "unupdatable", skip_serializing_if = "Option::is_none")]
    pub unupdatable: Option<bool>,
}

impl BlobItem {
    pub fn new(json_type: String) -> BlobItem {
        BlobItem {
            application_target: None,
            data_type: None,
            document_id: None,
            element_id: None,
            element_type: None,
            encoded_configuration: None,
            id: None,
            json_type,
            part_id: None,
            part_name: None,
            part_number: None,
            revision: None,
            revision_id: None,
            state: None,
            version_id: None,
            version_name: None,
            data_type_for_response: None,
            filename: None,
            foreign_data_id: None,
            href: None,
            pretty_type: None,
            safe_to_show: None,
            specified_unit: None,
            unupdatable: None,
        }
    }
}

