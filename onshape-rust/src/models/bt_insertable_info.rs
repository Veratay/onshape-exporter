/*
 * Onshape REST API
 *
 * ## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn't used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.
 *
 * The version of the OpenAPI document: 1.198.56658-8969b956ea73
 * Contact: api-support@onshape.zendesk.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// BtInsertableInfo : Array of items in the current page.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct BtInsertableInfo {
    #[serde(rename = "bodyType", skip_serializing_if = "Option::is_none")]
    pub body_type: Option<models::GbtBodyType>,
    #[serde(rename = "classType", skip_serializing_if = "Option::is_none")]
    pub class_type: Option<i32>,
    #[serde(rename = "configuration", skip_serializing_if = "Option::is_none")]
    pub configuration: Option<String>,
    #[serde(rename = "configurationParameterValues", skip_serializing_if = "Option::is_none")]
    pub configuration_parameter_values: Option<Vec<String>>,
    #[serde(rename = "configurationParameters", skip_serializing_if = "Option::is_none")]
    pub configuration_parameters: Option<Vec<String>>,
    #[serde(rename = "dataType", skip_serializing_if = "Option::is_none")]
    pub data_type: Option<String>,
    #[serde(rename = "deterministicId", skip_serializing_if = "Option::is_none")]
    pub deterministic_id: Option<String>,
    #[serde(rename = "documentId", skip_serializing_if = "Option::is_none")]
    pub document_id: Option<String>,
    #[serde(rename = "elementId", skip_serializing_if = "Option::is_none")]
    pub element_id: Option<String>,
    #[serde(rename = "elementName", skip_serializing_if = "Option::is_none")]
    pub element_name: Option<String>,
    #[serde(rename = "elementType", skip_serializing_if = "Option::is_none")]
    pub element_type: Option<models::GbtElementType>,
    #[serde(rename = "featureId", skip_serializing_if = "Option::is_none")]
    pub feature_id: Option<String>,
    #[serde(rename = "featureName", skip_serializing_if = "Option::is_none")]
    pub feature_name: Option<String>,
    #[serde(rename = "featureSpec", skip_serializing_if = "Option::is_none")]
    pub feature_spec: Option<Vec<String>>,
    #[serde(rename = "featureType", skip_serializing_if = "Option::is_none")]
    pub feature_type: Option<String>,
    #[serde(rename = "fsComputedPartPropertySpec", skip_serializing_if = "Option::is_none")]
    pub fs_computed_part_property_spec: Option<Vec<String>>,
    #[serde(rename = "fsTableSpec", skip_serializing_if = "Option::is_none")]
    pub fs_table_spec: Option<Vec<String>>,
    #[serde(rename = "hasFaults", skip_serializing_if = "Option::is_none")]
    pub has_faults: Option<bool>,
    /// URI to fetch complete information of the resource.
    #[serde(rename = "href", skip_serializing_if = "Option::is_none")]
    pub href: Option<String>,
    /// Id of the resource.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "insertableQuery", skip_serializing_if = "Option::is_none")]
    pub insertable_query: Option<String>,
    #[serde(rename = "isFlattenedBody", skip_serializing_if = "Option::is_none")]
    pub is_flattened_body: Option<bool>,
    #[serde(rename = "isMesh", skip_serializing_if = "Option::is_none")]
    pub is_mesh: Option<bool>,
    #[serde(rename = "meshState", skip_serializing_if = "Option::is_none")]
    pub mesh_state: Option<models::GbtMeshState>,
    #[serde(rename = "microversionId", skip_serializing_if = "Option::is_none")]
    pub microversion_id: Option<String>,
    /// Name of the resource.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "parentId", skip_serializing_if = "Option::is_none")]
    pub parent_id: Option<String>,
    #[serde(rename = "partIdentity", skip_serializing_if = "Option::is_none")]
    pub part_identity: Option<String>,
    #[serde(rename = "partName", skip_serializing_if = "Option::is_none")]
    pub part_name: Option<String>,
    #[serde(rename = "predictableThumbnailId", skip_serializing_if = "Option::is_none")]
    pub predictable_thumbnail_id: Option<String>,
    #[serde(rename = "sourceFileExtension", skip_serializing_if = "Option::is_none")]
    pub source_file_extension: Option<String>,
    #[serde(rename = "thumbnailUri", skip_serializing_if = "Option::is_none")]
    pub thumbnail_uri: Option<String>,
    #[serde(rename = "unflattenedPartDeterministicId", skip_serializing_if = "Option::is_none")]
    pub unflattened_part_deterministic_id: Option<String>,
    #[serde(rename = "variableName", skip_serializing_if = "Option::is_none")]
    pub variable_name: Option<String>,
    #[serde(rename = "versionId", skip_serializing_if = "Option::is_none")]
    pub version_id: Option<String>,
    #[serde(rename = "versionName", skip_serializing_if = "Option::is_none")]
    pub version_name: Option<String>,
    /// URI to visualize the resource in a webclient if applicable.
    #[serde(rename = "viewRef", skip_serializing_if = "Option::is_none")]
    pub view_ref: Option<String>,
    #[serde(rename = "workspaceId", skip_serializing_if = "Option::is_none")]
    pub workspace_id: Option<String>,
    #[serde(rename = "workspaceName", skip_serializing_if = "Option::is_none")]
    pub workspace_name: Option<String>,
}

impl BtInsertableInfo {
    /// Array of items in the current page.
    pub fn new() -> BtInsertableInfo {
        BtInsertableInfo {
            body_type: None,
            class_type: None,
            configuration: None,
            configuration_parameter_values: None,
            configuration_parameters: None,
            data_type: None,
            deterministic_id: None,
            document_id: None,
            element_id: None,
            element_name: None,
            element_type: None,
            feature_id: None,
            feature_name: None,
            feature_spec: None,
            feature_type: None,
            fs_computed_part_property_spec: None,
            fs_table_spec: None,
            has_faults: None,
            href: None,
            id: None,
            insertable_query: None,
            is_flattened_body: None,
            is_mesh: None,
            mesh_state: None,
            microversion_id: None,
            name: None,
            parent_id: None,
            part_identity: None,
            part_name: None,
            predictable_thumbnail_id: None,
            source_file_extension: None,
            thumbnail_uri: None,
            unflattened_part_deterministic_id: None,
            variable_name: None,
            version_id: None,
            version_name: None,
            view_ref: None,
            workspace_id: None,
            workspace_name: None,
        }
    }
}

