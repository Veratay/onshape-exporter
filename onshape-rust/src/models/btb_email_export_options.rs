/*
 * Onshape REST API
 *
 * ## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn't used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.
 *
 * The version of the OpenAPI document: 1.198.56658-8969b956ea73
 * Contact: api-support@onshape.zendesk.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// BtbEmailExportOptions : Options for exporting elements as a link in an email.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct BtbEmailExportOptions {
    /// Use 'true' if a link in an email should be sent.
    #[serde(rename = "emailLink")]
    pub email_link: bool,
    /// Message to send in the email body along with the download link.
    #[serde(rename = "emailMessage", skip_serializing_if = "Option::is_none")]
    pub email_message: Option<String>,
    /// Subject to send the email with.
    #[serde(rename = "emailSubject", skip_serializing_if = "Option::is_none")]
    pub email_subject: Option<String>,
    /// List of emails to send the email to.
    #[serde(rename = "emailTo")]
    pub email_to: Vec<String>,
    /// Id of the user who does the export.
    #[serde(rename = "fromUserId")]
    pub from_user_id: String,
    /// A password to protect the email with.
    #[serde(rename = "password", skip_serializing_if = "Option::is_none")]
    pub password: Option<String>,
    /// Use 'true' if the email should be protected with a password.
    #[serde(rename = "passwordRequired", skip_serializing_if = "Option::is_none")]
    pub password_required: Option<bool>,
    /// Use 'true' if email copy should be sent to the user who does the export.
    #[serde(rename = "sendCopyToMe", skip_serializing_if = "Option::is_none")]
    pub send_copy_to_me: Option<bool>,
    /// Number of days to keep the link valid for.
    #[serde(rename = "validForDays", skip_serializing_if = "Option::is_none")]
    pub valid_for_days: Option<i32>,
}

impl BtbEmailExportOptions {
    /// Options for exporting elements as a link in an email.
    pub fn new(email_link: bool, email_to: Vec<String>, from_user_id: String) -> BtbEmailExportOptions {
        BtbEmailExportOptions {
            email_link,
            email_message: None,
            email_subject: None,
            email_to,
            from_user_id,
            password: None,
            password_required: None,
            send_copy_to_me: None,
            valid_for_days: None,
        }
    }
}

