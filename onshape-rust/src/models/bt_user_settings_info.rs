/*
 * Onshape REST API
 *
 * ## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn't used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.
 *
 * The version of the OpenAPI document: 1.198.56658-8969b956ea73
 * Contact: api-support@onshape.zendesk.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct BtUserSettingsInfo {
    #[serde(rename = "axisRotationLock", skip_serializing_if = "Option::is_none")]
    pub axis_rotation_lock: Option<bool>,
    #[serde(rename = "commonUnits", skip_serializing_if = "Option::is_none")]
    pub common_units: Option<Box<models::BtCommonUnitsInfo>>,
    #[serde(rename = "customColors", skip_serializing_if = "Option::is_none")]
    pub custom_colors: Option<Vec<String>>,
    #[serde(rename = "defaultUnits", skip_serializing_if = "Option::is_none")]
    pub default_units: Option<Box<models::BtDefaultUnitsInfo>>,
    #[serde(rename = "displayAssemblyProperties", skip_serializing_if = "Option::is_none")]
    pub display_assembly_properties: Option<bool>,
    #[serde(rename = "drawingBackgroundId", skip_serializing_if = "Option::is_none")]
    pub drawing_background_id: Option<i32>,
    #[serde(rename = "enforceApplicationAcl", skip_serializing_if = "Option::is_none")]
    pub enforce_application_acl: Option<bool>,
    #[serde(rename = "exportDrawingOptions", skip_serializing_if = "Option::is_none")]
    pub export_drawing_options: Option<String>,
    #[serde(rename = "exportSolidOptions", skip_serializing_if = "Option::is_none")]
    pub export_solid_options: Option<String>,
    #[serde(rename = "graphicsRenderMode", skip_serializing_if = "Option::is_none")]
    pub graphics_render_mode: Option<String>,
    #[serde(rename = "graphicsSmoothEdge", skip_serializing_if = "Option::is_none")]
    pub graphics_smooth_edge: Option<String>,
    #[serde(rename = "highlightLaminarEdges", skip_serializing_if = "Option::is_none")]
    pub highlight_laminar_edges: Option<String>,
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "importOptions", skip_serializing_if = "Option::is_none")]
    pub import_options: Option<String>,
    #[serde(rename = "isolateEnableSelectionDesire", skip_serializing_if = "Option::is_none")]
    pub isolate_enable_selection_desire: Option<bool>,
    #[serde(rename = "isolateHideTransparent", skip_serializing_if = "Option::is_none")]
    pub isolate_hide_transparent: Option<String>,
    #[serde(rename = "isolateOpacitySliderValue", skip_serializing_if = "Option::is_none")]
    pub isolate_opacity_slider_value: Option<i32>,
    #[serde(rename = "locale", skip_serializing_if = "Option::is_none")]
    pub locale: Option<String>,
    #[serde(rename = "makeTransparentEnableSelectionDesire", skip_serializing_if = "Option::is_none")]
    pub make_transparent_enable_selection_desire: Option<bool>,
    #[serde(rename = "makeTransparentOpacitySliderValue", skip_serializing_if = "Option::is_none")]
    pub make_transparent_opacity_slider_value: Option<i32>,
    #[serde(rename = "materialLibrarySettings", skip_serializing_if = "Option::is_none")]
    pub material_library_settings: Option<Box<models::BtMaterialLibrarySettingsInfo>>,
    #[serde(rename = "miniToolbarSettings", skip_serializing_if = "Option::is_none")]
    pub mini_toolbar_settings: Option<String>,
    #[serde(rename = "mouseActions", skip_serializing_if = "Option::is_none")]
    pub mouse_actions: Option<String>,
    #[serde(rename = "perspectiveModeOn", skip_serializing_if = "Option::is_none")]
    pub perspective_mode_on: Option<String>,
    #[serde(rename = "previousSketchFont", skip_serializing_if = "Option::is_none")]
    pub previous_sketch_font: Option<String>,
    #[serde(rename = "reverseScrollWheelZoomDirection", skip_serializing_if = "Option::is_none")]
    pub reverse_scroll_wheel_zoom_direction: Option<bool>,
    #[serde(rename = "selectItemViewStateInfos", skip_serializing_if = "Option::is_none")]
    pub select_item_view_state_infos: Option<Vec<models::BtSelectItemViewStateInfo>>,
    #[serde(rename = "startupPage", skip_serializing_if = "Option::is_none")]
    pub startup_page: Option<i32>,
    #[serde(rename = "substituteApprovers", skip_serializing_if = "Option::is_none")]
    pub substitute_approvers: Option<Vec<models::BtSubstituteApproverInfo>>,
    #[serde(rename = "theme", skip_serializing_if = "Option::is_none")]
    pub theme: Option<i32>,
    #[serde(rename = "unitsDisplayPrecision", skip_serializing_if = "Option::is_none")]
    pub units_display_precision: Option<std::collections::HashMap<String, i32>>,
    #[serde(rename = "unitsMaximumDisplayPrecision", skip_serializing_if = "Option::is_none")]
    pub units_maximum_display_precision: Option<Box<models::BtUnitsMaximumDisplayPrecisionInfo>>,
    #[serde(rename = "use24HourTime", skip_serializing_if = "Option::is_none")]
    pub use24_hour_time: Option<bool>,
    #[serde(rename = "useDecimalComma", skip_serializing_if = "Option::is_none")]
    pub use_decimal_comma: Option<bool>,
    #[serde(rename = "viewManipulationMouseKeyMapping", skip_serializing_if = "Option::is_none")]
    pub view_manipulation_mouse_key_mapping: Option<Box<models::BtViewManipulationMouseKeyMappingInfo>>,
    #[serde(rename = "viewMappingId", skip_serializing_if = "Option::is_none")]
    pub view_mapping_id: Option<i32>,
}

impl BtUserSettingsInfo {
    pub fn new() -> BtUserSettingsInfo {
        BtUserSettingsInfo {
            axis_rotation_lock: None,
            common_units: None,
            custom_colors: None,
            default_units: None,
            display_assembly_properties: None,
            drawing_background_id: None,
            enforce_application_acl: None,
            export_drawing_options: None,
            export_solid_options: None,
            graphics_render_mode: None,
            graphics_smooth_edge: None,
            highlight_laminar_edges: None,
            id: None,
            import_options: None,
            isolate_enable_selection_desire: None,
            isolate_hide_transparent: None,
            isolate_opacity_slider_value: None,
            locale: None,
            make_transparent_enable_selection_desire: None,
            make_transparent_opacity_slider_value: None,
            material_library_settings: None,
            mini_toolbar_settings: None,
            mouse_actions: None,
            perspective_mode_on: None,
            previous_sketch_font: None,
            reverse_scroll_wheel_zoom_direction: None,
            select_item_view_state_infos: None,
            startup_page: None,
            substitute_approvers: None,
            theme: None,
            units_display_precision: None,
            units_maximum_display_precision: None,
            use24_hour_time: None,
            use_decimal_comma: None,
            view_manipulation_mouse_key_mapping: None,
            view_mapping_id: None,
        }
    }
}

