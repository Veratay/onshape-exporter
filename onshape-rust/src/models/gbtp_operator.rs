/*
 * Onshape REST API
 *
 * ## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn't used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.
 *
 * The version of the OpenAPI document: 1.198.56658-8969b956ea73
 * Contact: api-support@onshape.zendesk.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum GbtpOperator {
    #[serde(rename = "NONE")]
    None,
    #[serde(rename = "PLUS")]
    Plus,
    #[serde(rename = "MINUS")]
    Minus,
    #[serde(rename = "TIMES")]
    Times,
    #[serde(rename = "DIVIDE")]
    Divide,
    #[serde(rename = "MODULUS")]
    Modulus,
    #[serde(rename = "POWER")]
    Power,
    #[serde(rename = "NEGATE")]
    Negate,
    #[serde(rename = "OR")]
    Or,
    #[serde(rename = "AND")]
    And,
    #[serde(rename = "NOT")]
    Not,
    #[serde(rename = "EQUAL_TO")]
    EqualTo,
    #[serde(rename = "NOT_EQUAL_TO")]
    NotEqualTo,
    #[serde(rename = "GREATER")]
    Greater,
    #[serde(rename = "LESS")]
    Less,
    #[serde(rename = "GREATER_OR_EQUAL")]
    GreaterOrEqual,
    #[serde(rename = "LESS_OR_EQUAL")]
    LessOrEqual,
    #[serde(rename = "CONCATENATE")]
    Concatenate,
    #[serde(rename = "CONDITIONAL")]
    Conditional,
    #[serde(rename = "UNDEFINED_COALESCING")]
    UndefinedCoalescing,

}

impl std::fmt::Display for GbtpOperator {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::None => write!(f, "NONE"),
            Self::Plus => write!(f, "PLUS"),
            Self::Minus => write!(f, "MINUS"),
            Self::Times => write!(f, "TIMES"),
            Self::Divide => write!(f, "DIVIDE"),
            Self::Modulus => write!(f, "MODULUS"),
            Self::Power => write!(f, "POWER"),
            Self::Negate => write!(f, "NEGATE"),
            Self::Or => write!(f, "OR"),
            Self::And => write!(f, "AND"),
            Self::Not => write!(f, "NOT"),
            Self::EqualTo => write!(f, "EQUAL_TO"),
            Self::NotEqualTo => write!(f, "NOT_EQUAL_TO"),
            Self::Greater => write!(f, "GREATER"),
            Self::Less => write!(f, "LESS"),
            Self::GreaterOrEqual => write!(f, "GREATER_OR_EQUAL"),
            Self::LessOrEqual => write!(f, "LESS_OR_EQUAL"),
            Self::Concatenate => write!(f, "CONCATENATE"),
            Self::Conditional => write!(f, "CONDITIONAL"),
            Self::UndefinedCoalescing => write!(f, "UNDEFINED_COALESCING"),
        }
    }
}

impl Default for GbtpOperator {
    fn default() -> GbtpOperator {
        Self::None
    }
}

