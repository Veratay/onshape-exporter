/*
 * Onshape REST API
 *
 * ## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn't used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.
 *
 * The version of the OpenAPI document: 1.198.56658-8969b956ea73
 * Contact: api-support@onshape.zendesk.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct BtElementMergeInfo {
    #[serde(rename = "branchPointElementName", skip_serializing_if = "Option::is_none")]
    pub branch_point_element_name: Option<String>,
    #[serde(rename = "branchPointElementPath", skip_serializing_if = "Option::is_none")]
    pub branch_point_element_path: Option<Vec<String>>,
    #[serde(rename = "dependentElementMergeInfo", skip_serializing_if = "Option::is_none")]
    pub dependent_element_merge_info: Option<Box<models::BtElementMergeInfo>>,
    #[serde(rename = "elementDataType", skip_serializing_if = "Option::is_none")]
    pub element_data_type: Option<String>,
    #[serde(rename = "elementId", skip_serializing_if = "Option::is_none")]
    pub element_id: Option<String>,
    #[serde(rename = "elementType", skip_serializing_if = "Option::is_none")]
    pub element_type: Option<models::GbtElementType>,
    #[serde(rename = "mergeable", skip_serializing_if = "Option::is_none")]
    pub mergeable: Option<bool>,
    #[serde(rename = "sourceElementName", skip_serializing_if = "Option::is_none")]
    pub source_element_name: Option<String>,
    #[serde(rename = "sourceElementPath", skip_serializing_if = "Option::is_none")]
    pub source_element_path: Option<Vec<String>>,
    #[serde(rename = "sourceElementStatus", skip_serializing_if = "Option::is_none")]
    pub source_element_status: Option<models::GbtElementBranchStatus>,
    #[serde(rename = "sourceLibraryVersion", skip_serializing_if = "Option::is_none")]
    pub source_library_version: Option<i32>,
    #[serde(rename = "sourceModifiedAt", skip_serializing_if = "Option::is_none")]
    pub source_modified_at: Option<String>,
    #[serde(rename = "sourceModifiedBy", skip_serializing_if = "Option::is_none")]
    pub source_modified_by: Option<Box<models::BtUserBasicSummaryInfo>>,
    #[serde(rename = "sourceOutOfDate", skip_serializing_if = "Option::is_none")]
    pub source_out_of_date: Option<bool>,
    #[serde(rename = "targetElementName", skip_serializing_if = "Option::is_none")]
    pub target_element_name: Option<String>,
    #[serde(rename = "targetElementPath", skip_serializing_if = "Option::is_none")]
    pub target_element_path: Option<Vec<String>>,
    #[serde(rename = "targetElementStatus", skip_serializing_if = "Option::is_none")]
    pub target_element_status: Option<models::GbtElementBranchStatus>,
    #[serde(rename = "targetLibraryVersion", skip_serializing_if = "Option::is_none")]
    pub target_library_version: Option<i32>,
    #[serde(rename = "targetModifiedAt", skip_serializing_if = "Option::is_none")]
    pub target_modified_at: Option<String>,
    #[serde(rename = "targetModifiedBy", skip_serializing_if = "Option::is_none")]
    pub target_modified_by: Option<Box<models::BtUserBasicSummaryInfo>>,
    #[serde(rename = "targetOutOfDate", skip_serializing_if = "Option::is_none")]
    pub target_out_of_date: Option<bool>,
    #[serde(rename = "versionCompatible", skip_serializing_if = "Option::is_none")]
    pub version_compatible: Option<bool>,
}

impl BtElementMergeInfo {
    pub fn new() -> BtElementMergeInfo {
        BtElementMergeInfo {
            branch_point_element_name: None,
            branch_point_element_path: None,
            dependent_element_merge_info: None,
            element_data_type: None,
            element_id: None,
            element_type: None,
            mergeable: None,
            source_element_name: None,
            source_element_path: None,
            source_element_status: None,
            source_library_version: None,
            source_modified_at: None,
            source_modified_by: None,
            source_out_of_date: None,
            target_element_name: None,
            target_element_path: None,
            target_element_status: None,
            target_library_version: None,
            target_modified_at: None,
            target_modified_by: None,
            target_out_of_date: None,
            version_compatible: None,
        }
    }
}

