/*
 * Onshape REST API
 *
 * ## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn't used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.
 *
 * The version of the OpenAPI document: 1.198.56658-8969b956ea73
 * Contact: api-support@onshape.zendesk.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum GbtQuantityType {
    #[serde(rename = "UNKNOWN")]
    Unknown,
    #[serde(rename = "INTEGER")]
    Integer,
    #[serde(rename = "REAL")]
    Real,
    #[serde(rename = "LENGTH")]
    Length,
    #[serde(rename = "ANGLE")]
    Angle,
    #[serde(rename = "MASS")]
    Mass,
    #[serde(rename = "TIME")]
    Time,
    #[serde(rename = "TEMPERATURE")]
    Temperature,
    #[serde(rename = "CURRENT")]
    Current,
    #[serde(rename = "ANYTHING")]
    Anything,
    #[serde(rename = "ANYTHING_WITH_UNITS")]
    AnythingWithUnits,
    #[serde(rename = "FORCE")]
    Force,
    #[serde(rename = "PRESSURE")]
    Pressure,
    #[serde(rename = "MOMENT")]
    Moment,
    #[serde(rename = "ACCELERATION")]
    Acceleration,
    #[serde(rename = "ANGULAR_VELOCITY")]
    AngularVelocity,
    #[serde(rename = "ENERGY")]
    Energy,
    #[serde(rename = "AREA")]
    Area,
    #[serde(rename = "VOLUME")]
    Volume,
    #[serde(rename = "BOOLEAN")]
    Boolean,
    #[serde(rename = "STRING")]
    String,

}

impl std::fmt::Display for GbtQuantityType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Unknown => write!(f, "UNKNOWN"),
            Self::Integer => write!(f, "INTEGER"),
            Self::Real => write!(f, "REAL"),
            Self::Length => write!(f, "LENGTH"),
            Self::Angle => write!(f, "ANGLE"),
            Self::Mass => write!(f, "MASS"),
            Self::Time => write!(f, "TIME"),
            Self::Temperature => write!(f, "TEMPERATURE"),
            Self::Current => write!(f, "CURRENT"),
            Self::Anything => write!(f, "ANYTHING"),
            Self::AnythingWithUnits => write!(f, "ANYTHING_WITH_UNITS"),
            Self::Force => write!(f, "FORCE"),
            Self::Pressure => write!(f, "PRESSURE"),
            Self::Moment => write!(f, "MOMENT"),
            Self::Acceleration => write!(f, "ACCELERATION"),
            Self::AngularVelocity => write!(f, "ANGULAR_VELOCITY"),
            Self::Energy => write!(f, "ENERGY"),
            Self::Area => write!(f, "AREA"),
            Self::Volume => write!(f, "VOLUME"),
            Self::Boolean => write!(f, "BOOLEAN"),
            Self::String => write!(f, "STRING"),
        }
    }
}

impl Default for GbtQuantityType {
    fn default() -> GbtQuantityType {
        Self::Unknown
    }
}

