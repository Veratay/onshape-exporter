/*
 * Onshape REST API
 *
 * ## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn't used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.
 *
 * The version of the OpenAPI document: 1.198.56658-8969b956ea73
 * Contact: api-support@onshape.zendesk.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct BtLocationInfo226 {
    /// Type of JSON object.
    #[serde(rename = "btType", skip_serializing_if = "Option::is_none")]
    pub bt_type: Option<String>,
    #[serde(rename = "character", skip_serializing_if = "Option::is_none")]
    pub character: Option<i32>,
    #[serde(rename = "column", skip_serializing_if = "Option::is_none")]
    pub column: Option<i32>,
    #[serde(rename = "document", skip_serializing_if = "Option::is_none")]
    pub document: Option<String>,
    #[serde(rename = "elementMicroversion", skip_serializing_if = "Option::is_none")]
    pub element_microversion: Option<String>,
    #[serde(rename = "endCharacter", skip_serializing_if = "Option::is_none")]
    pub end_character: Option<i32>,
    #[serde(rename = "endColumn", skip_serializing_if = "Option::is_none")]
    pub end_column: Option<i32>,
    #[serde(rename = "endLine", skip_serializing_if = "Option::is_none")]
    pub end_line: Option<i32>,
    #[serde(rename = "fromNode", skip_serializing_if = "Option::is_none")]
    pub from_node: Option<Box<models::BtpNode7>>,
    #[serde(rename = "fromTemplate", skip_serializing_if = "Option::is_none")]
    pub from_template: Option<Box<models::BtLocationInfo226>>,
    #[serde(rename = "languageVersion", skip_serializing_if = "Option::is_none")]
    pub language_version: Option<i32>,
    #[serde(rename = "line", skip_serializing_if = "Option::is_none")]
    pub line: Option<i32>,
    #[serde(rename = "moduleIds", skip_serializing_if = "Option::is_none")]
    pub module_ids: Option<Box<models::BtDocumentVersionElementIds1897>>,
    #[serde(rename = "nodeId", skip_serializing_if = "Option::is_none")]
    pub node_id: Option<String>,
    #[serde(rename = "parseNodeId", skip_serializing_if = "Option::is_none")]
    pub parse_node_id: Option<String>,
    #[serde(rename = "parseNodeIdRaw", skip_serializing_if = "Option::is_none")]
    pub parse_node_id_raw: Option<Box<models::BtObjectId>>,
    #[serde(rename = "topLevel", skip_serializing_if = "Option::is_none")]
    pub top_level: Option<String>,
    #[serde(rename = "version", skip_serializing_if = "Option::is_none")]
    pub version: Option<String>,
}

impl BtLocationInfo226 {
    pub fn new() -> BtLocationInfo226 {
        BtLocationInfo226 {
            bt_type: None,
            character: None,
            column: None,
            document: None,
            element_microversion: None,
            end_character: None,
            end_column: None,
            end_line: None,
            from_node: None,
            from_template: None,
            language_version: None,
            line: None,
            module_ids: None,
            node_id: None,
            parse_node_id: None,
            parse_node_id_raw: None,
            top_level: None,
            version: None,
        }
    }
}

